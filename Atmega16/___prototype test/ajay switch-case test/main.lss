
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000012b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          000000b5  00800060  00800060  0000132a  2**0
                  ALLOC
  2 .debug_aranges 000000c0  00000000  00000000  0000132a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000076d  00000000  00000000  000013ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001959  00000000  00000000  00001b57  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000094b  00000000  00000000  000034b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000135d  00000000  00000000  00003dfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000005e0  00000000  00000000  00005158  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000008b4  00000000  00000000  00005738  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000b5a  00000000  00000000  00005fec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  00006b46  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__ctors_end>
       4:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
       8:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
       c:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__vector_3>
      10:	0c 94 c8 07 	jmp	0xf90	; 0xf90 <__vector_4>
      14:	0c 94 8f 08 	jmp	0x111e	; 0x111e <__vector_5>
      18:	0c 94 35 08 	jmp	0x106a	; 0x106a <__vector_6>
      1c:	0c 94 62 08 	jmp	0x10c4	; 0x10c4 <__vector_7>
      20:	0c 94 9b 07 	jmp	0xf36	; 0xf36 <__vector_8>
      24:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__vector_9>
      28:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      2c:	0c 94 bb 03 	jmp	0x776	; 0x776 <__vector_11>
      30:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      34:	0c 94 00 04 	jmp	0x800	; 0x800 <__vector_13>
      38:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__vector_14>
      3c:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      40:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      44:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      48:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      4c:	0c 94 08 08 	jmp	0x1010	; 0x1010 <__vector_19>
      50:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>

00000054 <__c.1577>:
      54:	25 63 20 72 69 67 68 74 20 0a 00                    %c right ..

0000005f <__c.1575>:
      5f:	72 69 67 68 74 0a 00                                right..

00000066 <__c.1572>:
      66:	25 63 20 61 20 0a 00                                %c a ..

0000006d <__c.1570>:
      6d:	6c 65 66 74 0a 00                                   left..

00000073 <__c.1567>:
      73:	25 63 20 73 20 0a 00                                %c s ..

0000007a <__c.1565>:
      7a:	72 65 76 65 72 73 65 0a 00                          reverse..

00000083 <__c.1561>:
      83:	25 63 20 77 20 0a 00                                %c w ..

0000008a <__c.1559>:
      8a:	66 6f 72 77 61 72 64 0a 00                          forward..

00000093 <HexChars>:
      93:	30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46     0123456789ABCDEF
      a3:	00                                                  .

000000a4 <TimerPrescaleFactor>:
      a4:	00 00 01 00 08 00 40 00 00 01 00 04                 ......@.....

000000b0 <TimerRTCPrescaleFactor>:
      b0:	00 00 01 00 08 00 20 00 40 00 80 00 00 01 00 04     ...... .@.......

000000c0 <__ctors_end>:
      c0:	11 24       	eor	r1, r1
      c2:	1f be       	out	0x3f, r1	; 63
      c4:	cf e5       	ldi	r28, 0x5F	; 95
      c6:	d4 e0       	ldi	r29, 0x04	; 4
      c8:	de bf       	out	0x3e, r29	; 62
      ca:	cd bf       	out	0x3d, r28	; 61

000000cc <__do_clear_bss>:
      cc:	11 e0       	ldi	r17, 0x01	; 1
      ce:	a0 e6       	ldi	r26, 0x60	; 96
      d0:	b0 e0       	ldi	r27, 0x00	; 0
      d2:	01 c0       	rjmp	.+2      	; 0xd6 <.do_clear_bss_start>

000000d4 <.do_clear_bss_loop>:
      d4:	1d 92       	st	X+, r1

000000d6 <.do_clear_bss_start>:
      d6:	a5 31       	cpi	r26, 0x15	; 21
      d8:	b1 07       	cpc	r27, r17
      da:	e1 f7       	brne	.-8      	; 0xd4 <.do_clear_bss_loop>
      dc:	0e 94 9e 00 	call	0x13c	; 0x13c <main>
      e0:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <_exit>

000000e4 <__bad_interrupt>:
      e4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e8 <configure_ports>:

//************CONFIGURE PORTS************
//configure ports for input or output - specific to ATmega8
void configure_ports(void)
	{
	DDRC = 0x00;  //configure all C ports for input
      e8:	14 ba       	out	0x14, r1	; 20
	PORTC = 0x00; //make sure pull-up resistors are turned off
      ea:	15 ba       	out	0x15, r1	; 21
	DDRD = 0xFF;  //configure all D ports for output
      ec:	8f ef       	ldi	r24, 0xFF	; 255
      ee:	81 bb       	out	0x11, r24	; 17
	DDRB = 0xC7;  //configure B ports 0, 1, 2, 6, 7 for output (google search '0b11000111 to hex')
      f0:	87 ec       	ldi	r24, 0xC7	; 199
      f2:	87 bb       	out	0x17, r24	; 23
	}
      f4:	08 95       	ret

000000f6 <delay_cycles>:
void delay_cycles(unsigned long int cycles)
	{
	cycles=cycles*16;
	while(cycles > 0)
		cycles--;
	}
      f6:	08 95       	ret

000000f8 <LED_on>:
//*********SIMPLIFIED FUNCTIONS**********
//functions to make coding easier for a beginner
//but could cause port mixup confusion for intermediate users
void LED_on(void)
	{
	PORT_OFF(PORTD, 4);//turn LED on
      f8:	94 98       	cbi	0x12, 4	; 18
	}
      fa:	08 95       	ret

000000fc <LED_off>:
void LED_off(void)
	{
	PORT_ON(PORTD, 4);//turn LED off
      fc:	94 9a       	sbi	0x12, 4	; 18
	}
      fe:	08 95       	ret

00000100 <servo_left>:
void servo_left(signed long int speed)
	{
	PORT_ON(PORTD, 2);
     100:	92 9a       	sbi	0x12, 2	; 18
	delay_cycles(speed);
	PORT_OFF(PORTD, 2);//keep off
     102:	92 98       	cbi	0x12, 2	; 18
	delay_cycles(200);
	}
     104:	08 95       	ret

00000106 <servo_right>:
void servo_right(signed long int speed)
	{
	PORT_ON(PORTD, 3);
     106:	93 9a       	sbi	0x12, 3	; 18
	delay_cycles(speed);		
	PORT_OFF(PORTD, 3);//keep off
     108:	93 98       	cbi	0x12, 3	; 18
	delay_cycles(200);
	}
     10a:	08 95       	ret

0000010c <initpwm>:
#include "SOR_Utils.h"


void initpwm()
{
		TCCR0|=(1<<WGM00)|(1<<WGM01)|(1<<COM01)|(1<<CS00);//|(1<<CS00);
     10c:	83 b7       	in	r24, 0x33	; 51
     10e:	89 66       	ori	r24, 0x69	; 105
     110:	83 bf       	out	0x33, r24	; 51

		DDRB|=(1<<PINB3); // set output for PWM timer 0
     112:	bb 9a       	sbi	0x17, 3	; 23
		
		TCCR1A|=(1<<WGM10)|(1<<COM1A1);//|(1<<COM1A0);
     114:	8f b5       	in	r24, 0x2f	; 47
     116:	81 68       	ori	r24, 0x81	; 129
     118:	8f bd       	out	0x2f, r24	; 47
		TCCR1B|=(1<<WGM12)|(1<<CS10);
     11a:	8e b5       	in	r24, 0x2e	; 46
     11c:	89 60       	ori	r24, 0x09	; 9
     11e:	8e bd       	out	0x2e, r24	; 46
      
		DDRD|=(1<<PIND5); // set output for PWM timer 1
     120:	8d 9a       	sbi	0x11, 5	; 17
		
		TCCR2|=(1<<WGM21)|(1<<WGM20)|(1<<COM21)|(1<<CS20);//|(1<<COM20);
     122:	85 b5       	in	r24, 0x25	; 37
     124:	89 66       	ori	r24, 0x69	; 105
     126:	85 bd       	out	0x25, r24	; 37

		DDRD|=(1<<PIND7); // set putput for PWM timer 2
     128:	8f 9a       	sbi	0x11, 7	; 17
}
     12a:	08 95       	ret

0000012c <setpwmoutput1>:



void setpwmoutput1(int8_t duty1,int8_t duty2,int8_t duty3)
{
   OCR0 = duty1;
     12c:	8c bf       	out	0x3c, r24	; 60
   OCR1A = duty2;
     12e:	77 27       	eor	r23, r23
     130:	67 fd       	sbrc	r22, 7
     132:	70 95       	com	r23
     134:	7b bd       	out	0x2b, r23	; 43
     136:	6a bd       	out	0x2a, r22	; 42
   OCR2 = duty3;
     138:	43 bd       	out	0x23, r20	; 35
}
     13a:	08 95       	ret

0000013c <main>:

int main(void)
{	
     13c:	2f 92       	push	r2
     13e:	3f 92       	push	r3
     140:	4f 92       	push	r4
     142:	5f 92       	push	r5
     144:	6f 92       	push	r6
     146:	7f 92       	push	r7
     148:	8f 92       	push	r8
     14a:	9f 92       	push	r9
     14c:	af 92       	push	r10
     14e:	bf 92       	push	r11
     150:	cf 92       	push	r12
     152:	df 92       	push	r13
     154:	ef 92       	push	r14
     156:	ff 92       	push	r15
     158:	0f 93       	push	r16
     15a:	1f 93       	push	r17
     15c:	cf 93       	push	r28
     15e:	df 93       	push	r29
	DDRB|= 0b11111111;
     160:	87 b3       	in	r24, 0x17	; 23
     162:	8f ef       	ldi	r24, 0xFF	; 255
     164:	87 bb       	out	0x17, r24	; 23
	//int8_t m1=0;
	//int8_t m2=0;
	//int8_t m3=0;
	
	
	initpwm();
     166:	0e 94 86 00 	call	0x10c	; 0x10c <initpwm>
	
	uartInit();
     16a:	0e 94 88 04 	call	0x910	; 0x910 <uartInit>
	uartSetBaudRate(9600);
     16e:	60 e8       	ldi	r22, 0x80	; 128
     170:	75 e2       	ldi	r23, 0x25	; 37
     172:	80 e0       	ldi	r24, 0x00	; 0
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	0e 94 82 03 	call	0x704	; 0x704 <uartSetBaudRate>
	rprintfInit(uartSendByte);
     17a:	83 ea       	ldi	r24, 0xA3	; 163
     17c:	93 e0       	ldi	r25, 0x03	; 3
     17e:	0e 94 8e 01 	call	0x31c	; 0x31c <rprintfInit>
	
	TCNT0=0;
     182:	12 be       	out	0x32, r1	; 50
	    TCNT1=0;
     184:	1d bc       	out	0x2d, r1	; 45
     186:	1c bc       	out	0x2c, r1	; 44
	    TCNT2=0;
     188:	14 bc       	out	0x24, r1	; 36
		PORTB|= 0b00000000;
     18a:	88 b3       	in	r24, 0x18	; 24
     18c:	88 bb       	out	0x18, r24	; 24
		OCR0=0;
     18e:	1c be       	out	0x3c, r1	; 60
		PORTD|= 0b00000000;
     190:	82 b3       	in	r24, 0x12	; 18
     192:	82 bb       	out	0x12, r24	; 18
	   _delay_ms(15);
	   break;
		
	      case 's' :
		
		rprintf("reverse\n");
     194:	11 e0       	ldi	r17, 0x01	; 1


void setpwmoutput1(int8_t duty1,int8_t duty2,int8_t duty3)
{
   OCR0 = duty1;
   OCR1A = duty2;
     196:	ee 24       	eor	r14, r14
     198:	ea 94       	dec	r14
     19a:	fe 2c       	mov	r15, r14
   OCR2 = duty3;
     19c:	0f ef       	ldi	r16, 0xFF	; 255
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     19e:	c0 e6       	ldi	r28, 0x60	; 96
     1a0:	da ee       	ldi	r29, 0xEA	; 234
		break;
		
		
		case 'a' :
		
	   rprintf("left\n");
     1a2:	5d e6       	ldi	r21, 0x6D	; 109
     1a4:	25 2e       	mov	r2, r21
     1a6:	50 e0       	ldi	r21, 0x00	; 0
     1a8:	35 2e       	mov	r3, r21
	   rprintf("%c a \n", data);
     1aa:	46 e6       	ldi	r20, 0x66	; 102
     1ac:	44 2e       	mov	r4, r20
     1ae:	40 e0       	ldi	r20, 0x00	; 0
     1b0:	54 2e       	mov	r5, r20
     1b2:	31 e6       	ldi	r19, 0x61	; 97
     1b4:	63 2e       	mov	r6, r19
     1b6:	71 2c       	mov	r7, r1
	   break;
			
		
		case 'd':
		
	   rprintf("right\n");
     1b8:	2f e5       	ldi	r18, 0x5F	; 95
     1ba:	82 2e       	mov	r8, r18
     1bc:	20 e0       	ldi	r18, 0x00	; 0
     1be:	92 2e       	mov	r9, r18
	   rprintf("%c right \n", data);
     1c0:	94 e5       	ldi	r25, 0x54	; 84
     1c2:	a9 2e       	mov	r10, r25
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	b9 2e       	mov	r11, r25
     1c8:	84 e6       	ldi	r24, 0x64	; 100
     1ca:	c8 2e       	mov	r12, r24
     1cc:	d1 2c       	mov	r13, r1

       
   while(1)
   {

		char data=uartGetByte();
     1ce:	0e 94 61 04 	call	0x8c2	; 0x8c2 <uartGetByte>
		
		switch(data)
     1d2:	84 36       	cpi	r24, 0x64	; 100
     1d4:	09 f4       	brne	.+2      	; 0x1d8 <main+0x9c>
     1d6:	72 c0       	rjmp	.+228    	; 0x2bc <main+0x180>
     1d8:	85 36       	cpi	r24, 0x65	; 101
     1da:	20 f4       	brcc	.+8      	; 0x1e4 <main+0xa8>
     1dc:	81 36       	cpi	r24, 0x61	; 97
     1de:	09 f0       	breq	.+2      	; 0x1e2 <main+0xa6>
     1e0:	94 c0       	rjmp	.+296    	; 0x30a <main+0x1ce>
     1e2:	4d c0       	rjmp	.+154    	; 0x27e <main+0x142>
     1e4:	83 37       	cpi	r24, 0x73	; 115
     1e6:	39 f1       	breq	.+78     	; 0x236 <main+0xfa>
     1e8:	87 37       	cpi	r24, 0x77	; 119
     1ea:	09 f0       	breq	.+2      	; 0x1ee <main+0xb2>
     1ec:	8e c0       	rjmp	.+284    	; 0x30a <main+0x1ce>
		{
	
	   case 'w':
	   
	   rprintf("forward\n");
     1ee:	00 d0       	rcall	.+0      	; 0x1f0 <main+0xb4>
     1f0:	0f 92       	push	r0
     1f2:	ad b7       	in	r26, 0x3d	; 61
     1f4:	be b7       	in	r27, 0x3e	; 62
     1f6:	11 96       	adiw	r26, 0x01	; 1
     1f8:	1c 93       	st	X, r17
     1fa:	11 97       	sbiw	r26, 0x01	; 1
     1fc:	ea e8       	ldi	r30, 0x8A	; 138
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	13 96       	adiw	r26, 0x03	; 3
     202:	fc 93       	st	X, r31
     204:	ee 93       	st	-X, r30
     206:	12 97       	sbiw	r26, 0x02	; 2
     208:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <rprintf1RamRom>
	   rprintf("%c w \n", data);
     20c:	00 d0       	rcall	.+0      	; 0x20e <main+0xd2>
     20e:	ed b7       	in	r30, 0x3d	; 61
     210:	fe b7       	in	r31, 0x3e	; 62
     212:	31 96       	adiw	r30, 0x01	; 1
     214:	ad b7       	in	r26, 0x3d	; 61
     216:	be b7       	in	r27, 0x3e	; 62
     218:	11 96       	adiw	r26, 0x01	; 1
     21a:	1c 93       	st	X, r17
     21c:	83 e8       	ldi	r24, 0x83	; 131
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	92 83       	std	Z+2, r25	; 0x02
     222:	81 83       	std	Z+1, r24	; 0x01
     224:	a7 e7       	ldi	r26, 0x77	; 119
     226:	b0 e0       	ldi	r27, 0x00	; 0
     228:	b4 83       	std	Z+4, r27	; 0x04
     22a:	a3 83       	std	Z+3, r26	; 0x03
     22c:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <rprintf1RamRom>
	   PORTB|= (1<<PINB4)|(1<<PINB7);
     230:	88 b3       	in	r24, 0x18	; 24
     232:	80 69       	ori	r24, 0x90	; 144
     234:	1f c0       	rjmp	.+62     	; 0x274 <main+0x138>
	   _delay_ms(15);
	   break;
		
	      case 's' :
		
		rprintf("reverse\n");
     236:	00 d0       	rcall	.+0      	; 0x238 <main+0xfc>
     238:	0f 92       	push	r0
     23a:	ed b7       	in	r30, 0x3d	; 61
     23c:	fe b7       	in	r31, 0x3e	; 62
     23e:	11 83       	std	Z+1, r17	; 0x01
     240:	8a e7       	ldi	r24, 0x7A	; 122
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	93 83       	std	Z+3, r25	; 0x03
     246:	82 83       	std	Z+2, r24	; 0x02
     248:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <rprintf1RamRom>
	    rprintf("%c s \n", data);
     24c:	00 d0       	rcall	.+0      	; 0x24e <main+0x112>
     24e:	ed b7       	in	r30, 0x3d	; 61
     250:	fe b7       	in	r31, 0x3e	; 62
     252:	31 96       	adiw	r30, 0x01	; 1
     254:	ad b7       	in	r26, 0x3d	; 61
     256:	be b7       	in	r27, 0x3e	; 62
     258:	11 96       	adiw	r26, 0x01	; 1
     25a:	1c 93       	st	X, r17
     25c:	83 e7       	ldi	r24, 0x73	; 115
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	92 83       	std	Z+2, r25	; 0x02
     262:	81 83       	std	Z+1, r24	; 0x01
     264:	a3 e7       	ldi	r26, 0x73	; 115
     266:	b0 e0       	ldi	r27, 0x00	; 0
     268:	b4 83       	std	Z+4, r27	; 0x04
     26a:	a3 83       	std	Z+3, r26	; 0x03
     26c:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <rprintf1RamRom>
		PORTB|= (1<<PINB5)|(1<<PINB6);
     270:	88 b3       	in	r24, 0x18	; 24
     272:	80 66       	ori	r24, 0x60	; 96
     274:	88 bb       	out	0x18, r24	; 24



void setpwmoutput1(int8_t duty1,int8_t duty2,int8_t duty3)
{
   OCR0 = duty1;
     276:	1c be       	out	0x3c, r1	; 60
   OCR1A = duty2;
     278:	fb bc       	out	0x2b, r15	; 43
     27a:	ea bc       	out	0x2a, r14	; 42
     27c:	3c c0       	rjmp	.+120    	; 0x2f6 <main+0x1ba>
		break;
		
		
		case 'a' :
		
	   rprintf("left\n");
     27e:	00 d0       	rcall	.+0      	; 0x280 <main+0x144>
     280:	0f 92       	push	r0
     282:	ed b7       	in	r30, 0x3d	; 61
     284:	fe b7       	in	r31, 0x3e	; 62
     286:	11 83       	std	Z+1, r17	; 0x01
     288:	33 82       	std	Z+3, r3	; 0x03
     28a:	22 82       	std	Z+2, r2	; 0x02
     28c:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <rprintf1RamRom>
	   rprintf("%c a \n", data);
     290:	00 d0       	rcall	.+0      	; 0x292 <main+0x156>
     292:	ed b7       	in	r30, 0x3d	; 61
     294:	fe b7       	in	r31, 0x3e	; 62
     296:	31 96       	adiw	r30, 0x01	; 1
     298:	ad b7       	in	r26, 0x3d	; 61
     29a:	be b7       	in	r27, 0x3e	; 62
     29c:	11 96       	adiw	r26, 0x01	; 1
     29e:	1c 93       	st	X, r17
     2a0:	52 82       	std	Z+2, r5	; 0x02
     2a2:	41 82       	std	Z+1, r4	; 0x01
     2a4:	74 82       	std	Z+4, r7	; 0x04
     2a6:	63 82       	std	Z+3, r6	; 0x03
     2a8:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <rprintf1RamRom>
	   PORTB|= (1<<PINB1)|(1<<PINB6);
     2ac:	88 b3       	in	r24, 0x18	; 24
     2ae:	82 64       	ori	r24, 0x42	; 66
     2b0:	88 bb       	out	0x18, r24	; 24



void setpwmoutput1(int8_t duty1,int8_t duty2,int8_t duty3)
{
   OCR0 = duty1;
     2b2:	0c bf       	out	0x3c, r16	; 60
   OCR1A = duty2;
     2b4:	fb bc       	out	0x2b, r15	; 43
     2b6:	ea bc       	out	0x2a, r14	; 42
   OCR2 = duty3;
     2b8:	13 bc       	out	0x23, r1	; 35
     2ba:	1e c0       	rjmp	.+60     	; 0x2f8 <main+0x1bc>
	   break;
			
		
		case 'd':
		
	   rprintf("right\n");
     2bc:	00 d0       	rcall	.+0      	; 0x2be <main+0x182>
     2be:	0f 92       	push	r0
     2c0:	ed b7       	in	r30, 0x3d	; 61
     2c2:	fe b7       	in	r31, 0x3e	; 62
     2c4:	11 83       	std	Z+1, r17	; 0x01
     2c6:	93 82       	std	Z+3, r9	; 0x03
     2c8:	82 82       	std	Z+2, r8	; 0x02
     2ca:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <rprintf1RamRom>
	   rprintf("%c right \n", data);
     2ce:	00 d0       	rcall	.+0      	; 0x2d0 <main+0x194>
     2d0:	ed b7       	in	r30, 0x3d	; 61
     2d2:	fe b7       	in	r31, 0x3e	; 62
     2d4:	31 96       	adiw	r30, 0x01	; 1
     2d6:	ad b7       	in	r26, 0x3d	; 61
     2d8:	be b7       	in	r27, 0x3e	; 62
     2da:	11 96       	adiw	r26, 0x01	; 1
     2dc:	1c 93       	st	X, r17
     2de:	b2 82       	std	Z+2, r11	; 0x02
     2e0:	a1 82       	std	Z+1, r10	; 0x01
     2e2:	d4 82       	std	Z+4, r13	; 0x04
     2e4:	c3 82       	std	Z+3, r12	; 0x03
     2e6:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <rprintf1RamRom>
	   PORTB|= (1<<PINB0)|(1<<PINB7);
     2ea:	88 b3       	in	r24, 0x18	; 24
     2ec:	81 68       	ori	r24, 0x81	; 129
     2ee:	88 bb       	out	0x18, r24	; 24



void setpwmoutput1(int8_t duty1,int8_t duty2,int8_t duty3)
{
   OCR0 = duty1;
     2f0:	0c bf       	out	0x3c, r16	; 60
   OCR1A = duty2;
     2f2:	1b bc       	out	0x2b, r1	; 43
     2f4:	1a bc       	out	0x2a, r1	; 42
   OCR2 = duty3;
     2f6:	03 bd       	out	0x23, r16	; 35
     2f8:	ce 01       	movw	r24, r28
     2fa:	01 97       	sbiw	r24, 0x01	; 1
     2fc:	f1 f7       	brne	.-4      	; 0x2fa <main+0x1be>
     2fe:	0f 90       	pop	r0
     300:	0f 90       	pop	r0
     302:	0f 90       	pop	r0
     304:	0f 90       	pop	r0
     306:	0f 90       	pop	r0
     308:	62 cf       	rjmp	.-316    	; 0x1ce <main+0x92>



void setpwmoutput1(int8_t duty1,int8_t duty2,int8_t duty3)
{
   OCR0 = duty1;
     30a:	1c be       	out	0x3c, r1	; 60
   OCR1A = duty2;
     30c:	1b bc       	out	0x2b, r1	; 43
     30e:	1a bc       	out	0x2a, r1	; 42
   OCR2 = duty3;
     310:	13 bc       	out	0x23, r1	; 35
	   break;
		
		
		default:
		setpwmoutput1(0,0,0);
		PORTB|= 0b00000000;
     312:	88 b3       	in	r24, 0x18	; 24
     314:	88 bb       	out	0x18, r24	; 24
		PORTD|= 0b00000000;
     316:	82 b3       	in	r24, 0x12	; 18
     318:	82 bb       	out	0x12, r24	; 18
     31a:	59 cf       	rjmp	.-334    	; 0x1ce <main+0x92>

0000031c <rprintfInit>:
     31c:	90 93 61 00 	sts	0x0061, r25
     320:	80 93 60 00 	sts	0x0060, r24
     324:	08 95       	ret

00000326 <rprintfChar>:
     326:	1f 93       	push	r17
     328:	18 2f       	mov	r17, r24
     32a:	8a 30       	cpi	r24, 0x0A	; 10
     32c:	31 f4       	brne	.+12     	; 0x33a <rprintfChar+0x14>
     32e:	e0 91 60 00 	lds	r30, 0x0060
     332:	f0 91 61 00 	lds	r31, 0x0061
     336:	8d e0       	ldi	r24, 0x0D	; 13
     338:	09 95       	icall
     33a:	e0 91 60 00 	lds	r30, 0x0060
     33e:	f0 91 61 00 	lds	r31, 0x0061
     342:	81 2f       	mov	r24, r17
     344:	09 95       	icall
     346:	1f 91       	pop	r17
     348:	08 95       	ret

0000034a <rprintfStr>:
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	ec 01       	movw	r28, r24
     350:	00 97       	sbiw	r24, 0x00	; 0
     352:	21 f4       	brne	.+8      	; 0x35c <rprintfStr+0x12>
     354:	06 c0       	rjmp	.+12     	; 0x362 <rprintfStr+0x18>
     356:	21 96       	adiw	r28, 0x01	; 1
     358:	0e 94 93 01 	call	0x326	; 0x326 <rprintfChar>
     35c:	88 81       	ld	r24, Y
     35e:	88 23       	and	r24, r24
     360:	d1 f7       	brne	.-12     	; 0x356 <rprintfStr+0xc>
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	08 95       	ret

00000368 <rprintfStrLen>:
     368:	ef 92       	push	r14
     36a:	ff 92       	push	r15
     36c:	0f 93       	push	r16
     36e:	1f 93       	push	r17
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	8c 01       	movw	r16, r24
     376:	7a 01       	movw	r14, r20
     378:	00 97       	sbiw	r24, 0x00	; 0
     37a:	e9 f0       	breq	.+58     	; 0x3b6 <rprintfStrLen+0x4e>
     37c:	20 e0       	ldi	r18, 0x00	; 0
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	26 17       	cp	r18, r22
     382:	37 07       	cpc	r19, r23
     384:	38 f4       	brcc	.+14     	; 0x394 <rprintfStrLen+0x2c>
     386:	f8 01       	movw	r30, r16
     388:	81 91       	ld	r24, Z+
     38a:	8f 01       	movw	r16, r30
     38c:	2f 5f       	subi	r18, 0xFF	; 255
     38e:	3f 4f       	sbci	r19, 0xFF	; 255
     390:	88 23       	and	r24, r24
     392:	b1 f7       	brne	.-20     	; 0x380 <rprintfStrLen+0x18>
     394:	c0 e0       	ldi	r28, 0x00	; 0
     396:	d0 e0       	ldi	r29, 0x00	; 0
     398:	0b c0       	rjmp	.+22     	; 0x3b0 <rprintfStrLen+0x48>
     39a:	f8 01       	movw	r30, r16
     39c:	80 81       	ld	r24, Z
     39e:	88 23       	and	r24, r24
     3a0:	19 f0       	breq	.+6      	; 0x3a8 <rprintfStrLen+0x40>
     3a2:	0f 5f       	subi	r16, 0xFF	; 255
     3a4:	1f 4f       	sbci	r17, 0xFF	; 255
     3a6:	01 c0       	rjmp	.+2      	; 0x3aa <rprintfStrLen+0x42>
     3a8:	80 e2       	ldi	r24, 0x20	; 32
     3aa:	0e 94 93 01 	call	0x326	; 0x326 <rprintfChar>
     3ae:	21 96       	adiw	r28, 0x01	; 1
     3b0:	ce 15       	cp	r28, r14
     3b2:	df 05       	cpc	r29, r15
     3b4:	90 f3       	brcs	.-28     	; 0x39a <rprintfStrLen+0x32>
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	ff 90       	pop	r15
     3c0:	ef 90       	pop	r14
     3c2:	08 95       	ret

000003c4 <rprintfProgStr>:
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	ec 01       	movw	r28, r24
     3ca:	00 97       	sbiw	r24, 0x00	; 0
     3cc:	19 f4       	brne	.+6      	; 0x3d4 <rprintfProgStr+0x10>
     3ce:	07 c0       	rjmp	.+14     	; 0x3de <rprintfProgStr+0x1a>
     3d0:	0e 94 93 01 	call	0x326	; 0x326 <rprintfChar>
     3d4:	fe 01       	movw	r30, r28
     3d6:	21 96       	adiw	r28, 0x01	; 1
     3d8:	84 91       	lpm	r24, Z+
     3da:	88 23       	and	r24, r24
     3dc:	c9 f7       	brne	.-14     	; 0x3d0 <rprintfProgStr+0xc>
     3de:	df 91       	pop	r29
     3e0:	cf 91       	pop	r28
     3e2:	08 95       	ret

000003e4 <rprintfCRLF>:
     3e4:	8a e0       	ldi	r24, 0x0A	; 10
     3e6:	0e 94 93 01 	call	0x326	; 0x326 <rprintfChar>
     3ea:	08 95       	ret

000003ec <rprintfu04>:
     3ec:	e8 2f       	mov	r30, r24
     3ee:	f0 e0       	ldi	r31, 0x00	; 0
     3f0:	ef 70       	andi	r30, 0x0F	; 15
     3f2:	f0 70       	andi	r31, 0x00	; 0
     3f4:	ed 56       	subi	r30, 0x6D	; 109
     3f6:	ff 4f       	sbci	r31, 0xFF	; 255
     3f8:	e4 91       	lpm	r30, Z+
     3fa:	8e 2f       	mov	r24, r30
     3fc:	0e 94 93 01 	call	0x326	; 0x326 <rprintfChar>
     400:	08 95       	ret

00000402 <rprintfu08>:
     402:	1f 93       	push	r17
     404:	18 2f       	mov	r17, r24
     406:	82 95       	swap	r24
     408:	8f 70       	andi	r24, 0x0F	; 15
     40a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <rprintfu04>
     40e:	81 2f       	mov	r24, r17
     410:	0e 94 f6 01 	call	0x3ec	; 0x3ec <rprintfu04>
     414:	1f 91       	pop	r17
     416:	08 95       	ret

00000418 <rprintfu16>:
     418:	1f 93       	push	r17
     41a:	18 2f       	mov	r17, r24
     41c:	89 2f       	mov	r24, r25
     41e:	0e 94 01 02 	call	0x402	; 0x402 <rprintfu08>
     422:	81 2f       	mov	r24, r17
     424:	0e 94 01 02 	call	0x402	; 0x402 <rprintfu08>
     428:	1f 91       	pop	r17
     42a:	08 95       	ret

0000042c <rprintfu32>:
     42c:	ef 92       	push	r14
     42e:	ff 92       	push	r15
     430:	0f 93       	push	r16
     432:	1f 93       	push	r17
     434:	7b 01       	movw	r14, r22
     436:	8c 01       	movw	r16, r24
     438:	c8 01       	movw	r24, r16
     43a:	aa 27       	eor	r26, r26
     43c:	bb 27       	eor	r27, r27
     43e:	0e 94 0c 02 	call	0x418	; 0x418 <rprintfu16>
     442:	c7 01       	movw	r24, r14
     444:	0e 94 0c 02 	call	0x418	; 0x418 <rprintfu16>
     448:	1f 91       	pop	r17
     44a:	0f 91       	pop	r16
     44c:	ff 90       	pop	r15
     44e:	ef 90       	pop	r14
     450:	08 95       	ret

00000452 <rprintfNum>:
     452:	2f 92       	push	r2
     454:	3f 92       	push	r3
     456:	4f 92       	push	r4
     458:	5f 92       	push	r5
     45a:	6f 92       	push	r6
     45c:	7f 92       	push	r7
     45e:	8f 92       	push	r8
     460:	9f 92       	push	r9
     462:	af 92       	push	r10
     464:	bf 92       	push	r11
     466:	cf 92       	push	r12
     468:	df 92       	push	r13
     46a:	ef 92       	push	r14
     46c:	ff 92       	push	r15
     46e:	0f 93       	push	r16
     470:	1f 93       	push	r17
     472:	df 93       	push	r29
     474:	cf 93       	push	r28
     476:	cd b7       	in	r28, 0x3d	; 61
     478:	de b7       	in	r29, 0x3e	; 62
     47a:	a3 97       	sbiw	r28, 0x23	; 35
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	f8 94       	cli
     480:	de bf       	out	0x3e, r29	; 62
     482:	0f be       	out	0x3f, r0	; 63
     484:	cd bf       	out	0x3d, r28	; 61
     486:	6a a3       	std	Y+34, r22	; 0x22
     488:	24 2e       	mov	r2, r20
     48a:	2b a3       	std	Y+35, r18	; 0x23
     48c:	37 01       	movw	r6, r14
     48e:	48 01       	movw	r8, r16
     490:	44 23       	and	r20, r20
     492:	51 f0       	breq	.+20     	; 0x4a8 <__stack+0x49>
     494:	17 ff       	sbrs	r17, 7
     496:	08 c0       	rjmp	.+16     	; 0x4a8 <__stack+0x49>
     498:	ee 24       	eor	r14, r14
     49a:	ff 24       	eor	r15, r15
     49c:	87 01       	movw	r16, r14
     49e:	e6 18       	sub	r14, r6
     4a0:	f7 08       	sbc	r15, r7
     4a2:	08 09       	sbc	r16, r8
     4a4:	19 09       	sbc	r17, r9
     4a6:	02 c0       	rjmp	.+4      	; 0x4ac <__stack+0x4d>
     4a8:	84 01       	movw	r16, r8
     4aa:	73 01       	movw	r14, r6
     4ac:	2a a1       	ldd	r18, Y+34	; 0x22
     4ae:	21 50       	subi	r18, 0x01	; 1
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	21 10       	cpse	r2, r1
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	29 1b       	sub	r18, r25
     4b8:	29 a3       	std	Y+33, r18	; 0x21
     4ba:	18 a2       	std	Y+32, r1	; 0x20
     4bc:	a8 2e       	mov	r10, r24
     4be:	bb 24       	eor	r11, r11
     4c0:	cc 24       	eor	r12, r12
     4c2:	dd 24       	eor	r13, r13
     4c4:	c8 01       	movw	r24, r16
     4c6:	b7 01       	movw	r22, r14
     4c8:	a6 01       	movw	r20, r12
     4ca:	95 01       	movw	r18, r10
     4cc:	0e 94 1c 09 	call	0x1238	; 0x1238 <__udivmodsi4>
     4d0:	fb 01       	movw	r30, r22
     4d2:	ef 70       	andi	r30, 0x0F	; 15
     4d4:	f0 70       	andi	r31, 0x00	; 0
     4d6:	ed 56       	subi	r30, 0x6D	; 109
     4d8:	ff 4f       	sbci	r31, 0xFF	; 255
     4da:	64 91       	lpm	r22, Z+
     4dc:	6f 8f       	std	Y+31, r22	; 0x1f
     4de:	c8 01       	movw	r24, r16
     4e0:	b7 01       	movw	r22, r14
     4e2:	a6 01       	movw	r20, r12
     4e4:	95 01       	movw	r18, r10
     4e6:	0e 94 1c 09 	call	0x1238	; 0x1238 <__udivmodsi4>
     4ea:	c9 01       	movw	r24, r18
     4ec:	da 01       	movw	r26, r20
     4ee:	7c 01       	movw	r14, r24
     4f0:	8d 01       	movw	r16, r26
     4f2:	9e e1       	ldi	r25, 0x1E	; 30
     4f4:	49 2e       	mov	r4, r25
     4f6:	51 2c       	mov	r5, r1
     4f8:	4c 0e       	add	r4, r28
     4fa:	5d 1e       	adc	r5, r29
     4fc:	39 a0       	ldd	r3, Y+33	; 0x21
     4fe:	25 c0       	rjmp	.+74     	; 0x54a <__stack+0xeb>
     500:	e1 14       	cp	r14, r1
     502:	f1 04       	cpc	r15, r1
     504:	01 05       	cpc	r16, r1
     506:	11 05       	cpc	r17, r1
     508:	c9 f0       	breq	.+50     	; 0x53c <__stack+0xdd>
     50a:	c8 01       	movw	r24, r16
     50c:	b7 01       	movw	r22, r14
     50e:	a6 01       	movw	r20, r12
     510:	95 01       	movw	r18, r10
     512:	0e 94 1c 09 	call	0x1238	; 0x1238 <__udivmodsi4>
     516:	fb 01       	movw	r30, r22
     518:	ef 70       	andi	r30, 0x0F	; 15
     51a:	f0 70       	andi	r31, 0x00	; 0
     51c:	ed 56       	subi	r30, 0x6D	; 109
     51e:	ff 4f       	sbci	r31, 0xFF	; 255
     520:	64 91       	lpm	r22, Z+
     522:	f2 01       	movw	r30, r4
     524:	60 83       	st	Z, r22
     526:	c8 01       	movw	r24, r16
     528:	b7 01       	movw	r22, r14
     52a:	a6 01       	movw	r20, r12
     52c:	95 01       	movw	r18, r10
     52e:	0e 94 1c 09 	call	0x1238	; 0x1238 <__udivmodsi4>
     532:	c9 01       	movw	r24, r18
     534:	da 01       	movw	r26, r20
     536:	7c 01       	movw	r14, r24
     538:	8d 01       	movw	r16, r26
     53a:	03 c0       	rjmp	.+6      	; 0x542 <__stack+0xe3>
     53c:	2b a1       	ldd	r18, Y+35	; 0x23
     53e:	f2 01       	movw	r30, r4
     540:	20 83       	st	Z, r18
     542:	3a 94       	dec	r3
     544:	08 94       	sec
     546:	41 08       	sbc	r4, r1
     548:	51 08       	sbc	r5, r1
     54a:	33 20       	and	r3, r3
     54c:	c9 f6       	brne	.-78     	; 0x500 <__stack+0xa1>
     54e:	ce 01       	movw	r24, r28
     550:	4f 96       	adiw	r24, 0x1f	; 31
     552:	8c 01       	movw	r16, r24
     554:	e9 a1       	ldd	r30, Y+33	; 0x21
     556:	0e 1b       	sub	r16, r30
     558:	11 09       	sbc	r17, r1
     55a:	22 20       	and	r2, r2
     55c:	f1 f0       	breq	.+60     	; 0x59a <__stack+0x13b>
     55e:	97 fe       	sbrs	r9, 7
     560:	05 c0       	rjmp	.+10     	; 0x56c <__stack+0x10d>
     562:	8d e2       	ldi	r24, 0x2D	; 45
     564:	f8 01       	movw	r30, r16
     566:	82 93       	st	-Z, r24
     568:	8f 01       	movw	r16, r30
     56a:	17 c0       	rjmp	.+46     	; 0x59a <__stack+0x13b>
     56c:	c8 01       	movw	r24, r16
     56e:	01 97       	sbiw	r24, 0x01	; 1
     570:	61 14       	cp	r6, r1
     572:	71 04       	cpc	r7, r1
     574:	81 04       	cpc	r8, r1
     576:	91 04       	cpc	r9, r1
     578:	19 f0       	breq	.+6      	; 0x580 <__stack+0x121>
     57a:	8c 01       	movw	r16, r24
     57c:	8b e2       	ldi	r24, 0x2B	; 43
     57e:	02 c0       	rjmp	.+4      	; 0x584 <__stack+0x125>
     580:	8c 01       	movw	r16, r24
     582:	80 e2       	ldi	r24, 0x20	; 32
     584:	f8 01       	movw	r30, r16
     586:	80 83       	st	Z, r24
     588:	08 c0       	rjmp	.+16     	; 0x59a <__stack+0x13b>
     58a:	f8 01       	movw	r30, r16
     58c:	81 91       	ld	r24, Z+
     58e:	8f 01       	movw	r16, r30
     590:	0e 94 93 01 	call	0x326	; 0x326 <rprintfChar>
     594:	fa a1       	ldd	r31, Y+34	; 0x22
     596:	f1 50       	subi	r31, 0x01	; 1
     598:	fa a3       	std	Y+34, r31	; 0x22
     59a:	2a a1       	ldd	r18, Y+34	; 0x22
     59c:	22 23       	and	r18, r18
     59e:	a9 f7       	brne	.-22     	; 0x58a <__stack+0x12b>
     5a0:	a3 96       	adiw	r28, 0x23	; 35
     5a2:	0f b6       	in	r0, 0x3f	; 63
     5a4:	f8 94       	cli
     5a6:	de bf       	out	0x3e, r29	; 62
     5a8:	0f be       	out	0x3f, r0	; 63
     5aa:	cd bf       	out	0x3d, r28	; 61
     5ac:	cf 91       	pop	r28
     5ae:	df 91       	pop	r29
     5b0:	1f 91       	pop	r17
     5b2:	0f 91       	pop	r16
     5b4:	ff 90       	pop	r15
     5b6:	ef 90       	pop	r14
     5b8:	df 90       	pop	r13
     5ba:	cf 90       	pop	r12
     5bc:	bf 90       	pop	r11
     5be:	af 90       	pop	r10
     5c0:	9f 90       	pop	r9
     5c2:	8f 90       	pop	r8
     5c4:	7f 90       	pop	r7
     5c6:	6f 90       	pop	r6
     5c8:	5f 90       	pop	r5
     5ca:	4f 90       	pop	r4
     5cc:	3f 90       	pop	r3
     5ce:	2f 90       	pop	r2
     5d0:	08 95       	ret

000005d2 <rprintf1RamRom>:
     5d2:	7f 92       	push	r7
     5d4:	8f 92       	push	r8
     5d6:	9f 92       	push	r9
     5d8:	af 92       	push	r10
     5da:	bf 92       	push	r11
     5dc:	cf 92       	push	r12
     5de:	df 92       	push	r13
     5e0:	ef 92       	push	r14
     5e2:	ff 92       	push	r15
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
     5e8:	df 93       	push	r29
     5ea:	cf 93       	push	r28
     5ec:	cd b7       	in	r28, 0x3d	; 61
     5ee:	de b7       	in	r29, 0x3e	; 62
     5f0:	78 88       	ldd	r7, Y+16	; 0x10
     5f2:	c9 88       	ldd	r12, Y+17	; 0x11
     5f4:	da 88       	ldd	r13, Y+18	; 0x12
     5f6:	53 e1       	ldi	r21, 0x13	; 19
     5f8:	e5 2e       	mov	r14, r21
     5fa:	f1 2c       	mov	r15, r1
     5fc:	ec 0e       	add	r14, r28
     5fe:	fd 1e       	adc	r15, r29
     600:	14 c0       	rjmp	.+40     	; 0x62a <rprintf1RamRom+0x58>
     602:	88 23       	and	r24, r24
     604:	81 f4       	brne	.+32     	; 0x626 <rprintf1RamRom+0x54>
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	cf 91       	pop	r28
     60c:	df 91       	pop	r29
     60e:	1f 91       	pop	r17
     610:	0f 91       	pop	r16
     612:	ff 90       	pop	r15
     614:	ef 90       	pop	r14
     616:	df 90       	pop	r13
     618:	cf 90       	pop	r12
     61a:	bf 90       	pop	r11
     61c:	af 90       	pop	r10
     61e:	9f 90       	pop	r9
     620:	8f 90       	pop	r8
     622:	7f 90       	pop	r7
     624:	08 95       	ret
     626:	0e 94 93 01 	call	0x326	; 0x326 <rprintfChar>
     62a:	96 01       	movw	r18, r12
     62c:	2f 5f       	subi	r18, 0xFF	; 255
     62e:	3f 4f       	sbci	r19, 0xFF	; 255
     630:	77 20       	and	r7, r7
     632:	21 f0       	breq	.+8      	; 0x63c <rprintf1RamRom+0x6a>
     634:	f6 01       	movw	r30, r12
     636:	69 01       	movw	r12, r18
     638:	84 91       	lpm	r24, Z+
     63a:	03 c0       	rjmp	.+6      	; 0x642 <rprintf1RamRom+0x70>
     63c:	f6 01       	movw	r30, r12
     63e:	80 81       	ld	r24, Z
     640:	69 01       	movw	r12, r18
     642:	85 32       	cpi	r24, 0x25	; 37
     644:	f1 f6       	brne	.-68     	; 0x602 <rprintf1RamRom+0x30>
     646:	2f 5f       	subi	r18, 0xFF	; 255
     648:	3f 4f       	sbci	r19, 0xFF	; 255
     64a:	77 20       	and	r7, r7
     64c:	21 f0       	breq	.+8      	; 0x656 <rprintf1RamRom+0x84>
     64e:	f6 01       	movw	r30, r12
     650:	69 01       	movw	r12, r18
     652:	84 91       	lpm	r24, Z+
     654:	03 c0       	rjmp	.+6      	; 0x65c <rprintf1RamRom+0x8a>
     656:	f6 01       	movw	r30, r12
     658:	80 81       	ld	r24, Z
     65a:	69 01       	movw	r12, r18
     65c:	84 36       	cpi	r24, 0x64	; 100
     65e:	29 f0       	breq	.+10     	; 0x66a <rprintf1RamRom+0x98>
     660:	88 37       	cpi	r24, 0x78	; 120
     662:	81 f0       	breq	.+32     	; 0x684 <rprintf1RamRom+0xb2>
     664:	83 36       	cpi	r24, 0x63	; 99
     666:	f9 f6       	brne	.-66     	; 0x626 <rprintf1RamRom+0x54>
     668:	06 c0       	rjmp	.+12     	; 0x676 <rprintf1RamRom+0xa4>
     66a:	00 e1       	ldi	r16, 0x10	; 16
     66c:	17 e2       	ldi	r17, 0x27	; 39
     66e:	4a e0       	ldi	r20, 0x0A	; 10
     670:	a4 2e       	mov	r10, r20
     672:	b1 2c       	mov	r11, r1
     674:	0c c0       	rjmp	.+24     	; 0x68e <rprintf1RamRom+0xbc>
     676:	f7 01       	movw	r30, r14
     678:	80 81       	ld	r24, Z
     67a:	22 e0       	ldi	r18, 0x02	; 2
     67c:	30 e0       	ldi	r19, 0x00	; 0
     67e:	e2 0e       	add	r14, r18
     680:	f3 1e       	adc	r15, r19
     682:	d1 cf       	rjmp	.-94     	; 0x626 <rprintf1RamRom+0x54>
     684:	00 e0       	ldi	r16, 0x00	; 0
     686:	10 e1       	ldi	r17, 0x10	; 16
     688:	30 e1       	ldi	r19, 0x10	; 16
     68a:	a3 2e       	mov	r10, r19
     68c:	b1 2c       	mov	r11, r1
     68e:	22 e0       	ldi	r18, 0x02	; 2
     690:	82 2e       	mov	r8, r18
     692:	91 2c       	mov	r9, r1
     694:	8e 0c       	add	r8, r14
     696:	9f 1c       	adc	r9, r15
     698:	f7 01       	movw	r30, r14
     69a:	e0 80       	ld	r14, Z
     69c:	f1 80       	ldd	r15, Z+1	; 0x01
     69e:	84 36       	cpi	r24, 0x64	; 100
     6a0:	b1 f4       	brne	.+44     	; 0x6ce <rprintf1RamRom+0xfc>
     6a2:	f7 fe       	sbrs	r15, 7
     6a4:	11 c0       	rjmp	.+34     	; 0x6c8 <rprintf1RamRom+0xf6>
     6a6:	f0 94       	com	r15
     6a8:	e1 94       	neg	r14
     6aa:	f1 08       	sbc	r15, r1
     6ac:	f3 94       	inc	r15
     6ae:	8d e2       	ldi	r24, 0x2D	; 45
     6b0:	0e 94 93 01 	call	0x326	; 0x326 <rprintfChar>
     6b4:	09 c0       	rjmp	.+18     	; 0x6c8 <rprintf1RamRom+0xf6>
     6b6:	c8 01       	movw	r24, r16
     6b8:	6a e0       	ldi	r22, 0x0A	; 10
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	0e 94 08 09 	call	0x1210	; 0x1210 <__udivmodhi4>
     6c0:	8b 01       	movw	r16, r22
     6c2:	62 30       	cpi	r22, 0x02	; 2
     6c4:	71 05       	cpc	r23, r1
     6c6:	18 f0       	brcs	.+6      	; 0x6ce <rprintf1RamRom+0xfc>
     6c8:	e0 16       	cp	r14, r16
     6ca:	f1 06       	cpc	r15, r17
     6cc:	a0 f3       	brcs	.-24     	; 0x6b6 <rprintf1RamRom+0xe4>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 08 09 	call	0x1210	; 0x1210 <__udivmodhi4>
     6d6:	86 2f       	mov	r24, r22
     6d8:	0e 94 f6 01 	call	0x3ec	; 0x3ec <rprintfu04>
     6dc:	c7 01       	movw	r24, r14
     6de:	b8 01       	movw	r22, r16
     6e0:	0e 94 08 09 	call	0x1210	; 0x1210 <__udivmodhi4>
     6e4:	7c 01       	movw	r14, r24
     6e6:	c8 01       	movw	r24, r16
     6e8:	b5 01       	movw	r22, r10
     6ea:	0e 94 08 09 	call	0x1210	; 0x1210 <__udivmodhi4>
     6ee:	8b 01       	movw	r16, r22
     6f0:	61 15       	cp	r22, r1
     6f2:	71 05       	cpc	r23, r1
     6f4:	61 f7       	brne	.-40     	; 0x6ce <rprintf1RamRom+0xfc>
     6f6:	74 01       	movw	r14, r8
     6f8:	98 cf       	rjmp	.-208    	; 0x62a <rprintf1RamRom+0x58>

000006fa <uartSetRxHandler>:
     6fa:	90 93 e3 00 	sts	0x00E3, r25
     6fe:	80 93 e2 00 	sts	0x00E2, r24
     702:	08 95       	ret

00000704 <uartSetBaudRate>:
     704:	9b 01       	movw	r18, r22
     706:	ac 01       	movw	r20, r24
     708:	60 58       	subi	r22, 0x80	; 128
     70a:	7b 47       	sbci	r23, 0x7B	; 123
     70c:	81 4e       	sbci	r24, 0xE1	; 225
     70e:	9f 4f       	sbci	r25, 0xFF	; 255
     710:	f3 e0       	ldi	r31, 0x03	; 3
     712:	66 0f       	add	r22, r22
     714:	77 1f       	adc	r23, r23
     716:	88 1f       	adc	r24, r24
     718:	99 1f       	adc	r25, r25
     71a:	fa 95       	dec	r31
     71c:	d1 f7       	brne	.-12     	; 0x712 <uartSetBaudRate+0xe>
     71e:	e4 e0       	ldi	r30, 0x04	; 4
     720:	22 0f       	add	r18, r18
     722:	33 1f       	adc	r19, r19
     724:	44 1f       	adc	r20, r20
     726:	55 1f       	adc	r21, r21
     728:	ea 95       	dec	r30
     72a:	d1 f7       	brne	.-12     	; 0x720 <uartSetBaudRate+0x1c>
     72c:	0e 94 1c 09 	call	0x1238	; 0x1238 <__udivmodsi4>
     730:	21 50       	subi	r18, 0x01	; 1
     732:	30 40       	sbci	r19, 0x00	; 0
     734:	29 b9       	out	0x09, r18	; 9
     736:	30 bd       	out	0x20, r19	; 32
     738:	08 95       	ret

0000073a <uartGetRxBuffer>:
     73a:	85 ef       	ldi	r24, 0xF5	; 245
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	08 95       	ret

00000740 <uartGetTxBuffer>:
     740:	8e ef       	ldi	r24, 0xFE	; 254
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	08 95       	ret

00000746 <uartSendByte>:
     746:	98 2f       	mov	r25, r24
     748:	80 91 f4 00 	lds	r24, 0x00F4
     74c:	88 23       	and	r24, r24
     74e:	e1 f3       	breq	.-8      	; 0x748 <uartSendByte+0x2>
     750:	9c b9       	out	0x0c, r25	; 12
     752:	10 92 f4 00 	sts	0x00F4, r1
     756:	08 95       	ret

00000758 <uartFlushReceiveBuffer>:
     758:	10 92 fa 00 	sts	0x00FA, r1
     75c:	10 92 f9 00 	sts	0x00F9, r1
     760:	08 95       	ret

00000762 <uartReceiveBufferIsEmpty>:
     762:	80 91 f9 00 	lds	r24, 0x00F9
     766:	90 91 fa 00 	lds	r25, 0x00FA
     76a:	89 2b       	or	r24, r25
     76c:	11 f0       	breq	.+4      	; 0x772 <uartReceiveBufferIsEmpty+0x10>
     76e:	80 e0       	ldi	r24, 0x00	; 0
     770:	08 95       	ret
     772:	8f ef       	ldi	r24, 0xFF	; 255
     774:	08 95       	ret

00000776 <__vector_11>:
     776:	1f 92       	push	r1
     778:	0f 92       	push	r0
     77a:	0f b6       	in	r0, 0x3f	; 63
     77c:	0f 92       	push	r0
     77e:	11 24       	eor	r1, r1
     780:	2f 93       	push	r18
     782:	3f 93       	push	r19
     784:	4f 93       	push	r20
     786:	5f 93       	push	r21
     788:	6f 93       	push	r22
     78a:	7f 93       	push	r23
     78c:	8f 93       	push	r24
     78e:	9f 93       	push	r25
     790:	af 93       	push	r26
     792:	bf 93       	push	r27
     794:	ef 93       	push	r30
     796:	ff 93       	push	r31
     798:	6c b1       	in	r22, 0x0c	; 12
     79a:	80 91 e2 00 	lds	r24, 0x00E2
     79e:	90 91 e3 00 	lds	r25, 0x00E3
     7a2:	89 2b       	or	r24, r25
     7a4:	39 f0       	breq	.+14     	; 0x7b4 <__vector_11+0x3e>
     7a6:	e0 91 e2 00 	lds	r30, 0x00E2
     7aa:	f0 91 e3 00 	lds	r31, 0x00E3
     7ae:	86 2f       	mov	r24, r22
     7b0:	09 95       	icall
     7b2:	0f c0       	rjmp	.+30     	; 0x7d2 <__vector_11+0x5c>
     7b4:	85 ef       	ldi	r24, 0xF5	; 245
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	0e 94 17 05 	call	0xa2e	; 0xa2e <bufferAddToEnd>
     7bc:	88 23       	and	r24, r24
     7be:	49 f4       	brne	.+18     	; 0x7d2 <__vector_11+0x5c>
     7c0:	80 91 06 01 	lds	r24, 0x0106
     7c4:	90 91 07 01 	lds	r25, 0x0107
     7c8:	01 96       	adiw	r24, 0x01	; 1
     7ca:	90 93 07 01 	sts	0x0107, r25
     7ce:	80 93 06 01 	sts	0x0106, r24
     7d2:	ff 91       	pop	r31
     7d4:	ef 91       	pop	r30
     7d6:	bf 91       	pop	r27
     7d8:	af 91       	pop	r26
     7da:	9f 91       	pop	r25
     7dc:	8f 91       	pop	r24
     7de:	7f 91       	pop	r23
     7e0:	6f 91       	pop	r22
     7e2:	5f 91       	pop	r21
     7e4:	4f 91       	pop	r20
     7e6:	3f 91       	pop	r19
     7e8:	2f 91       	pop	r18
     7ea:	0f 90       	pop	r0
     7ec:	0f be       	out	0x3f, r0	; 63
     7ee:	0f 90       	pop	r0
     7f0:	1f 90       	pop	r1
     7f2:	18 95       	reti

000007f4 <uartAddToTxBuffer>:
     7f4:	68 2f       	mov	r22, r24
     7f6:	8e ef       	ldi	r24, 0xFE	; 254
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	0e 94 17 05 	call	0xa2e	; 0xa2e <bufferAddToEnd>
     7fe:	08 95       	ret

00000800 <__vector_13>:
     800:	1f 92       	push	r1
     802:	0f 92       	push	r0
     804:	0f b6       	in	r0, 0x3f	; 63
     806:	0f 92       	push	r0
     808:	11 24       	eor	r1, r1
     80a:	2f 93       	push	r18
     80c:	3f 93       	push	r19
     80e:	4f 93       	push	r20
     810:	5f 93       	push	r21
     812:	6f 93       	push	r22
     814:	7f 93       	push	r23
     816:	8f 93       	push	r24
     818:	9f 93       	push	r25
     81a:	af 93       	push	r26
     81c:	bf 93       	push	r27
     81e:	ef 93       	push	r30
     820:	ff 93       	push	r31
     822:	80 91 fd 00 	lds	r24, 0x00FD
     826:	88 23       	and	r24, r24
     828:	71 f0       	breq	.+28     	; 0x846 <__vector_13+0x46>
     82a:	80 91 02 01 	lds	r24, 0x0102
     82e:	90 91 03 01 	lds	r25, 0x0103
     832:	89 2b       	or	r24, r25
     834:	31 f0       	breq	.+12     	; 0x842 <__vector_13+0x42>
     836:	8e ef       	ldi	r24, 0xFE	; 254
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	0e 94 ae 04 	call	0x95c	; 0x95c <bufferGetFromFront>
     83e:	8c b9       	out	0x0c, r24	; 12
     840:	05 c0       	rjmp	.+10     	; 0x84c <__vector_13+0x4c>
     842:	10 92 fd 00 	sts	0x00FD, r1
     846:	8f ef       	ldi	r24, 0xFF	; 255
     848:	80 93 f4 00 	sts	0x00F4, r24
     84c:	ff 91       	pop	r31
     84e:	ef 91       	pop	r30
     850:	bf 91       	pop	r27
     852:	af 91       	pop	r26
     854:	9f 91       	pop	r25
     856:	8f 91       	pop	r24
     858:	7f 91       	pop	r23
     85a:	6f 91       	pop	r22
     85c:	5f 91       	pop	r21
     85e:	4f 91       	pop	r20
     860:	3f 91       	pop	r19
     862:	2f 91       	pop	r18
     864:	0f 90       	pop	r0
     866:	0f be       	out	0x3f, r0	; 63
     868:	0f 90       	pop	r0
     86a:	1f 90       	pop	r1
     86c:	18 95       	reti

0000086e <uartSendTxBuffer>:
     86e:	8f ef       	ldi	r24, 0xFF	; 255
     870:	80 93 fd 00 	sts	0x00FD, r24
     874:	8e ef       	ldi	r24, 0xFE	; 254
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	0e 94 ae 04 	call	0x95c	; 0x95c <bufferGetFromFront>
     87c:	98 2f       	mov	r25, r24
     87e:	80 91 f4 00 	lds	r24, 0x00F4
     882:	88 23       	and	r24, r24
     884:	e1 f3       	breq	.-8      	; 0x87e <uartSendTxBuffer+0x10>
     886:	9c b9       	out	0x0c, r25	; 12
     888:	10 92 f4 00 	sts	0x00F4, r1
     88c:	08 95       	ret

0000088e <uartReceiveByte>:
     88e:	cf 93       	push	r28
     890:	df 93       	push	r29
     892:	ec 01       	movw	r28, r24
     894:	80 91 f7 00 	lds	r24, 0x00F7
     898:	90 91 f8 00 	lds	r25, 0x00F8
     89c:	89 2b       	or	r24, r25
     89e:	69 f0       	breq	.+26     	; 0x8ba <uartReceiveByte+0x2c>
     8a0:	80 91 f9 00 	lds	r24, 0x00F9
     8a4:	90 91 fa 00 	lds	r25, 0x00FA
     8a8:	89 2b       	or	r24, r25
     8aa:	39 f0       	breq	.+14     	; 0x8ba <uartReceiveByte+0x2c>
     8ac:	85 ef       	ldi	r24, 0xF5	; 245
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	0e 94 ae 04 	call	0x95c	; 0x95c <bufferGetFromFront>
     8b4:	88 83       	st	Y, r24
     8b6:	8f ef       	ldi	r24, 0xFF	; 255
     8b8:	01 c0       	rjmp	.+2      	; 0x8bc <uartReceiveByte+0x2e>
     8ba:	80 e0       	ldi	r24, 0x00	; 0
     8bc:	df 91       	pop	r29
     8be:	cf 91       	pop	r28
     8c0:	08 95       	ret

000008c2 <uartGetByte>:
     8c2:	df 93       	push	r29
     8c4:	cf 93       	push	r28
     8c6:	0f 92       	push	r0
     8c8:	cd b7       	in	r28, 0x3d	; 61
     8ca:	de b7       	in	r29, 0x3e	; 62
     8cc:	ce 01       	movw	r24, r28
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	0e 94 47 04 	call	0x88e	; 0x88e <uartReceiveByte>
     8d4:	88 23       	and	r24, r24
     8d6:	19 f4       	brne	.+6      	; 0x8de <uartGetByte+0x1c>
     8d8:	2f ef       	ldi	r18, 0xFF	; 255
     8da:	3f ef       	ldi	r19, 0xFF	; 255
     8dc:	03 c0       	rjmp	.+6      	; 0x8e4 <uartGetByte+0x22>
     8de:	89 81       	ldd	r24, Y+1	; 0x01
     8e0:	28 2f       	mov	r18, r24
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	c9 01       	movw	r24, r18
     8e6:	0f 90       	pop	r0
     8e8:	cf 91       	pop	r28
     8ea:	df 91       	pop	r29
     8ec:	08 95       	ret

000008ee <uartInitBuffers>:
     8ee:	85 ef       	ldi	r24, 0xF5	; 245
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	62 e6       	ldi	r22, 0x62	; 98
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	40 e4       	ldi	r20, 0x40	; 64
     8f8:	50 e0       	ldi	r21, 0x00	; 0
     8fa:	0e 94 a1 04 	call	0x942	; 0x942 <bufferInit>
     8fe:	8e ef       	ldi	r24, 0xFE	; 254
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	62 ea       	ldi	r22, 0xA2	; 162
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	40 e4       	ldi	r20, 0x40	; 64
     908:	50 e0       	ldi	r21, 0x00	; 0
     90a:	0e 94 a1 04 	call	0x942	; 0x942 <bufferInit>
     90e:	08 95       	ret

00000910 <uartInit>:
     910:	0e 94 77 04 	call	0x8ee	; 0x8ee <uartInitBuffers>
     914:	10 92 e3 00 	sts	0x00E3, r1
     918:	10 92 e2 00 	sts	0x00E2, r1
     91c:	88 ed       	ldi	r24, 0xD8	; 216
     91e:	8a b9       	out	0x0a, r24	; 10
     920:	60 e8       	ldi	r22, 0x80	; 128
     922:	75 e2       	ldi	r23, 0x25	; 37
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	0e 94 82 03 	call	0x704	; 0x704 <uartSetBaudRate>
     92c:	8f ef       	ldi	r24, 0xFF	; 255
     92e:	80 93 f4 00 	sts	0x00F4, r24
     932:	10 92 fd 00 	sts	0x00FD, r1
     936:	10 92 07 01 	sts	0x0107, r1
     93a:	10 92 06 01 	sts	0x0106, r1
     93e:	78 94       	sei
     940:	08 95       	ret

00000942 <bufferInit>:
     942:	fc 01       	movw	r30, r24
     944:	8f b7       	in	r24, 0x3f	; 63
     946:	f8 94       	cli
     948:	71 83       	std	Z+1, r23	; 0x01
     94a:	60 83       	st	Z, r22
     94c:	53 83       	std	Z+3, r21	; 0x03
     94e:	42 83       	std	Z+2, r20	; 0x02
     950:	17 82       	std	Z+7, r1	; 0x07
     952:	16 82       	std	Z+6, r1	; 0x06
     954:	15 82       	std	Z+5, r1	; 0x05
     956:	14 82       	std	Z+4, r1	; 0x04
     958:	8f bf       	out	0x3f, r24	; 63
     95a:	08 95       	ret

0000095c <bufferGetFromFront>:
     95c:	dc 01       	movw	r26, r24
     95e:	4f b7       	in	r20, 0x3f	; 63
     960:	f8 94       	cli
     962:	14 96       	adiw	r26, 0x04	; 4
     964:	8d 91       	ld	r24, X+
     966:	9c 91       	ld	r25, X
     968:	15 97       	sbiw	r26, 0x05	; 5
     96a:	89 2b       	or	r24, r25
     96c:	11 f4       	brne	.+4      	; 0x972 <bufferGetFromFront+0x16>
     96e:	e0 e0       	ldi	r30, 0x00	; 0
     970:	25 c0       	rjmp	.+74     	; 0x9bc <bufferGetFromFront+0x60>
     972:	16 96       	adiw	r26, 0x06	; 6
     974:	8d 91       	ld	r24, X+
     976:	9c 91       	ld	r25, X
     978:	17 97       	sbiw	r26, 0x07	; 7
     97a:	ed 91       	ld	r30, X+
     97c:	fc 91       	ld	r31, X
     97e:	11 97       	sbiw	r26, 0x01	; 1
     980:	e8 0f       	add	r30, r24
     982:	f9 1f       	adc	r31, r25
     984:	e0 81       	ld	r30, Z
     986:	01 96       	adiw	r24, 0x01	; 1
     988:	17 96       	adiw	r26, 0x07	; 7
     98a:	9c 93       	st	X, r25
     98c:	8e 93       	st	-X, r24
     98e:	16 97       	sbiw	r26, 0x06	; 6
     990:	12 96       	adiw	r26, 0x02	; 2
     992:	2d 91       	ld	r18, X+
     994:	3c 91       	ld	r19, X
     996:	13 97       	sbiw	r26, 0x03	; 3
     998:	82 17       	cp	r24, r18
     99a:	93 07       	cpc	r25, r19
     99c:	30 f0       	brcs	.+12     	; 0x9aa <bufferGetFromFront+0x4e>
     99e:	82 1b       	sub	r24, r18
     9a0:	93 0b       	sbc	r25, r19
     9a2:	17 96       	adiw	r26, 0x07	; 7
     9a4:	9c 93       	st	X, r25
     9a6:	8e 93       	st	-X, r24
     9a8:	16 97       	sbiw	r26, 0x06	; 6
     9aa:	14 96       	adiw	r26, 0x04	; 4
     9ac:	8d 91       	ld	r24, X+
     9ae:	9c 91       	ld	r25, X
     9b0:	15 97       	sbiw	r26, 0x05	; 5
     9b2:	01 97       	sbiw	r24, 0x01	; 1
     9b4:	15 96       	adiw	r26, 0x05	; 5
     9b6:	9c 93       	st	X, r25
     9b8:	8e 93       	st	-X, r24
     9ba:	14 97       	sbiw	r26, 0x04	; 4
     9bc:	4f bf       	out	0x3f, r20	; 63
     9be:	8e 2f       	mov	r24, r30
     9c0:	08 95       	ret

000009c2 <bufferDumpFromFront>:
     9c2:	fc 01       	movw	r30, r24
     9c4:	4f b7       	in	r20, 0x3f	; 63
     9c6:	f8 94       	cli
     9c8:	84 81       	ldd	r24, Z+4	; 0x04
     9ca:	95 81       	ldd	r25, Z+5	; 0x05
     9cc:	68 17       	cp	r22, r24
     9ce:	79 07       	cpc	r23, r25
     9d0:	b0 f4       	brcc	.+44     	; 0x9fe <bufferDumpFromFront+0x3c>
     9d2:	86 81       	ldd	r24, Z+6	; 0x06
     9d4:	97 81       	ldd	r25, Z+7	; 0x07
     9d6:	86 0f       	add	r24, r22
     9d8:	97 1f       	adc	r25, r23
     9da:	97 83       	std	Z+7, r25	; 0x07
     9dc:	86 83       	std	Z+6, r24	; 0x06
     9de:	22 81       	ldd	r18, Z+2	; 0x02
     9e0:	33 81       	ldd	r19, Z+3	; 0x03
     9e2:	82 17       	cp	r24, r18
     9e4:	93 07       	cpc	r25, r19
     9e6:	20 f0       	brcs	.+8      	; 0x9f0 <bufferDumpFromFront+0x2e>
     9e8:	82 1b       	sub	r24, r18
     9ea:	93 0b       	sbc	r25, r19
     9ec:	97 83       	std	Z+7, r25	; 0x07
     9ee:	86 83       	std	Z+6, r24	; 0x06
     9f0:	84 81       	ldd	r24, Z+4	; 0x04
     9f2:	95 81       	ldd	r25, Z+5	; 0x05
     9f4:	86 1b       	sub	r24, r22
     9f6:	97 0b       	sbc	r25, r23
     9f8:	95 83       	std	Z+5, r25	; 0x05
     9fa:	84 83       	std	Z+4, r24	; 0x04
     9fc:	02 c0       	rjmp	.+4      	; 0xa02 <bufferDumpFromFront+0x40>
     9fe:	15 82       	std	Z+5, r1	; 0x05
     a00:	14 82       	std	Z+4, r1	; 0x04
     a02:	4f bf       	out	0x3f, r20	; 63
     a04:	08 95       	ret

00000a06 <bufferGetAtIndex>:
     a06:	fc 01       	movw	r30, r24
     a08:	cb 01       	movw	r24, r22
     a0a:	2f b7       	in	r18, 0x3f	; 63
     a0c:	f8 94       	cli
     a0e:	2f bf       	out	0x3f, r18	; 63
     a10:	26 81       	ldd	r18, Z+6	; 0x06
     a12:	37 81       	ldd	r19, Z+7	; 0x07
     a14:	62 81       	ldd	r22, Z+2	; 0x02
     a16:	73 81       	ldd	r23, Z+3	; 0x03
     a18:	82 0f       	add	r24, r18
     a1a:	93 1f       	adc	r25, r19
     a1c:	0e 94 08 09 	call	0x1210	; 0x1210 <__udivmodhi4>
     a20:	01 90       	ld	r0, Z+
     a22:	f0 81       	ld	r31, Z
     a24:	e0 2d       	mov	r30, r0
     a26:	e8 0f       	add	r30, r24
     a28:	f9 1f       	adc	r31, r25
     a2a:	80 81       	ld	r24, Z
     a2c:	08 95       	ret

00000a2e <bufferAddToEnd>:
     a2e:	1f 93       	push	r17
     a30:	cf 93       	push	r28
     a32:	df 93       	push	r29
     a34:	ec 01       	movw	r28, r24
     a36:	16 2f       	mov	r17, r22
     a38:	4f b7       	in	r20, 0x3f	; 63
     a3a:	f8 94       	cli
     a3c:	2c 81       	ldd	r18, Y+4	; 0x04
     a3e:	3d 81       	ldd	r19, Y+5	; 0x05
     a40:	6a 81       	ldd	r22, Y+2	; 0x02
     a42:	7b 81       	ldd	r23, Y+3	; 0x03
     a44:	26 17       	cp	r18, r22
     a46:	37 07       	cpc	r19, r23
     a48:	98 f4       	brcc	.+38     	; 0xa70 <bufferAddToEnd+0x42>
     a4a:	8e 81       	ldd	r24, Y+6	; 0x06
     a4c:	9f 81       	ldd	r25, Y+7	; 0x07
     a4e:	82 0f       	add	r24, r18
     a50:	93 1f       	adc	r25, r19
     a52:	0e 94 08 09 	call	0x1210	; 0x1210 <__udivmodhi4>
     a56:	e8 81       	ld	r30, Y
     a58:	f9 81       	ldd	r31, Y+1	; 0x01
     a5a:	e8 0f       	add	r30, r24
     a5c:	f9 1f       	adc	r31, r25
     a5e:	10 83       	st	Z, r17
     a60:	8c 81       	ldd	r24, Y+4	; 0x04
     a62:	9d 81       	ldd	r25, Y+5	; 0x05
     a64:	01 96       	adiw	r24, 0x01	; 1
     a66:	9d 83       	std	Y+5, r25	; 0x05
     a68:	8c 83       	std	Y+4, r24	; 0x04
     a6a:	4f bf       	out	0x3f, r20	; 63
     a6c:	8f ef       	ldi	r24, 0xFF	; 255
     a6e:	02 c0       	rjmp	.+4      	; 0xa74 <bufferAddToEnd+0x46>
     a70:	4f bf       	out	0x3f, r20	; 63
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
     a78:	1f 91       	pop	r17
     a7a:	08 95       	ret

00000a7c <bufferIsNotFull>:
     a7c:	fc 01       	movw	r30, r24
     a7e:	8f b7       	in	r24, 0x3f	; 63
     a80:	f8 94       	cli
     a82:	8f bf       	out	0x3f, r24	; 63
     a84:	22 81       	ldd	r18, Z+2	; 0x02
     a86:	33 81       	ldd	r19, Z+3	; 0x03
     a88:	84 81       	ldd	r24, Z+4	; 0x04
     a8a:	95 81       	ldd	r25, Z+5	; 0x05
     a8c:	28 1b       	sub	r18, r24
     a8e:	39 0b       	sbc	r19, r25
     a90:	c9 01       	movw	r24, r18
     a92:	08 95       	ret

00000a94 <bufferFlush>:
     a94:	fc 01       	movw	r30, r24
     a96:	8f b7       	in	r24, 0x3f	; 63
     a98:	f8 94       	cli
     a9a:	15 82       	std	Z+5, r1	; 0x05
     a9c:	14 82       	std	Z+4, r1	; 0x04
     a9e:	8f bf       	out	0x3f, r24	; 63
     aa0:	08 95       	ret

00000aa2 <a2dInit>:
     aa2:	37 9a       	sbi	0x06, 7	; 6
     aa4:	35 98       	cbi	0x06, 5	; 6
     aa6:	86 b1       	in	r24, 0x06	; 6
     aa8:	88 7f       	andi	r24, 0xF8	; 248
     aaa:	86 60       	ori	r24, 0x06	; 6
     aac:	86 b9       	out	0x06, r24	; 6
     aae:	87 b1       	in	r24, 0x07	; 7
     ab0:	8f 73       	andi	r24, 0x3F	; 63
     ab2:	80 64       	ori	r24, 0x40	; 64
     ab4:	87 b9       	out	0x07, r24	; 7
     ab6:	3d 98       	cbi	0x07, 5	; 7
     ab8:	33 9a       	sbi	0x06, 3	; 6
     aba:	10 92 08 01 	sts	0x0108, r1
     abe:	78 94       	sei
     ac0:	08 95       	ret

00000ac2 <a2dOff>:
     ac2:	33 98       	cbi	0x06, 3	; 6
     ac4:	37 98       	cbi	0x06, 7	; 6
     ac6:	08 95       	ret

00000ac8 <a2dSetPrescaler>:
     ac8:	96 b1       	in	r25, 0x06	; 6
     aca:	98 7f       	andi	r25, 0xF8	; 248
     acc:	98 2b       	or	r25, r24
     ace:	96 b9       	out	0x06, r25	; 6
     ad0:	08 95       	ret

00000ad2 <a2dSetReference>:
     ad2:	97 b1       	in	r25, 0x07	; 7
     ad4:	82 95       	swap	r24
     ad6:	88 0f       	add	r24, r24
     ad8:	88 0f       	add	r24, r24
     ada:	80 7c       	andi	r24, 0xC0	; 192
     adc:	9f 73       	andi	r25, 0x3F	; 63
     ade:	98 2b       	or	r25, r24
     ae0:	97 b9       	out	0x07, r25	; 7
     ae2:	08 95       	ret

00000ae4 <a2dSetChannel>:
     ae4:	97 b1       	in	r25, 0x07	; 7
     ae6:	8f 71       	andi	r24, 0x1F	; 31
     ae8:	90 7e       	andi	r25, 0xE0	; 224
     aea:	89 2b       	or	r24, r25
     aec:	87 b9       	out	0x07, r24	; 7
     aee:	08 95       	ret

00000af0 <a2dStartConvert>:
     af0:	34 9a       	sbi	0x06, 4	; 6
     af2:	36 9a       	sbi	0x06, 6	; 6
     af4:	08 95       	ret

00000af6 <a2dIsComplete>:
     af6:	86 b1       	in	r24, 0x06	; 6
     af8:	80 74       	andi	r24, 0x40	; 64
     afa:	08 95       	ret

00000afc <a2dConvert10bit>:
     afc:	10 92 08 01 	sts	0x0108, r1
     b00:	97 b1       	in	r25, 0x07	; 7
     b02:	8f 71       	andi	r24, 0x1F	; 31
     b04:	90 7e       	andi	r25, 0xE0	; 224
     b06:	89 2b       	or	r24, r25
     b08:	87 b9       	out	0x07, r24	; 7
     b0a:	34 9a       	sbi	0x06, 4	; 6
     b0c:	36 9a       	sbi	0x06, 6	; 6
     b0e:	36 99       	sbic	0x06, 6	; 6
     b10:	fe cf       	rjmp	.-4      	; 0xb0e <a2dConvert10bit+0x12>
     b12:	24 b1       	in	r18, 0x04	; 4
     b14:	45 b1       	in	r20, 0x05	; 5
     b16:	94 2f       	mov	r25, r20
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	28 2b       	or	r18, r24
     b1e:	39 2b       	or	r19, r25
     b20:	c9 01       	movw	r24, r18
     b22:	08 95       	ret

00000b24 <a2dConvert8bit>:
     b24:	0e 94 7e 05 	call	0xafc	; 0xafc <a2dConvert10bit>
     b28:	96 95       	lsr	r25
     b2a:	87 95       	ror	r24
     b2c:	96 95       	lsr	r25
     b2e:	87 95       	ror	r24
     b30:	08 95       	ret

00000b32 <__vector_14>:
     b32:	1f 92       	push	r1
     b34:	0f 92       	push	r0
     b36:	0f b6       	in	r0, 0x3f	; 63
     b38:	0f 92       	push	r0
     b3a:	11 24       	eor	r1, r1
     b3c:	8f 93       	push	r24
     b3e:	8f ef       	ldi	r24, 0xFF	; 255
     b40:	80 93 08 01 	sts	0x0108, r24
     b44:	8f 91       	pop	r24
     b46:	0f 90       	pop	r0
     b48:	0f be       	out	0x3f, r0	; 63
     b4a:	0f 90       	pop	r0
     b4c:	1f 90       	pop	r1
     b4e:	18 95       	reti

00000b50 <delay_us>:
     b50:	08 95       	ret

00000b52 <timer0Init>:
     b52:	83 b7       	in	r24, 0x33	; 51
     b54:	88 7f       	andi	r24, 0xF8	; 248
     b56:	82 60       	ori	r24, 0x02	; 2
     b58:	83 bf       	out	0x33, r24	; 51
     b5a:	12 be       	out	0x32, r1	; 50
     b5c:	89 b7       	in	r24, 0x39	; 57
     b5e:	81 60       	ori	r24, 0x01	; 1
     b60:	89 bf       	out	0x39, r24	; 57
     b62:	10 92 09 01 	sts	0x0109, r1
     b66:	10 92 0a 01 	sts	0x010A, r1
     b6a:	10 92 0b 01 	sts	0x010B, r1
     b6e:	10 92 0c 01 	sts	0x010C, r1
     b72:	08 95       	ret

00000b74 <timer1Init>:
     b74:	8e b5       	in	r24, 0x2e	; 46
     b76:	88 7f       	andi	r24, 0xF8	; 248
     b78:	83 60       	ori	r24, 0x03	; 3
     b7a:	8e bd       	out	0x2e, r24	; 46
     b7c:	1d bc       	out	0x2d, r1	; 45
     b7e:	1c bc       	out	0x2c, r1	; 44
     b80:	89 b7       	in	r24, 0x39	; 57
     b82:	84 60       	ori	r24, 0x04	; 4
     b84:	89 bf       	out	0x39, r24	; 57
     b86:	08 95       	ret

00000b88 <timer2Init>:
     b88:	85 b5       	in	r24, 0x25	; 37
     b8a:	88 7f       	andi	r24, 0xF8	; 248
     b8c:	84 60       	ori	r24, 0x04	; 4
     b8e:	85 bd       	out	0x25, r24	; 37
     b90:	14 bc       	out	0x24, r1	; 36
     b92:	89 b7       	in	r24, 0x39	; 57
     b94:	80 64       	ori	r24, 0x40	; 64
     b96:	89 bf       	out	0x39, r24	; 57
     b98:	10 92 11 01 	sts	0x0111, r1
     b9c:	10 92 12 01 	sts	0x0112, r1
     ba0:	10 92 13 01 	sts	0x0113, r1
     ba4:	10 92 14 01 	sts	0x0114, r1
     ba8:	08 95       	ret

00000baa <timerInit>:
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	fc 01       	movw	r30, r24
     bb0:	ee 0f       	add	r30, r30
     bb2:	ff 1f       	adc	r31, r31
     bb4:	ec 51       	subi	r30, 0x1C	; 28
     bb6:	ff 4f       	sbci	r31, 0xFF	; 255
     bb8:	11 82       	std	Z+1, r1	; 0x01
     bba:	10 82       	st	Z, r1
     bbc:	01 96       	adiw	r24, 0x01	; 1
     bbe:	88 30       	cpi	r24, 0x08	; 8
     bc0:	91 05       	cpc	r25, r1
     bc2:	a9 f7       	brne	.-22     	; 0xbae <timerInit+0x4>
     bc4:	0e 94 a9 05 	call	0xb52	; 0xb52 <timer0Init>
     bc8:	0e 94 ba 05 	call	0xb74	; 0xb74 <timer1Init>
     bcc:	0e 94 c4 05 	call	0xb88	; 0xb88 <timer2Init>
     bd0:	78 94       	sei
     bd2:	08 95       	ret

00000bd4 <timer0SetPrescaler>:
     bd4:	93 b7       	in	r25, 0x33	; 51
     bd6:	98 7f       	andi	r25, 0xF8	; 248
     bd8:	98 2b       	or	r25, r24
     bda:	93 bf       	out	0x33, r25	; 51
     bdc:	08 95       	ret

00000bde <timer1SetPrescaler>:
     bde:	9e b5       	in	r25, 0x2e	; 46
     be0:	98 7f       	andi	r25, 0xF8	; 248
     be2:	98 2b       	or	r25, r24
     be4:	9e bd       	out	0x2e, r25	; 46
     be6:	08 95       	ret

00000be8 <timer2SetPrescaler>:
     be8:	95 b5       	in	r25, 0x25	; 37
     bea:	98 7f       	andi	r25, 0xF8	; 248
     bec:	98 2b       	or	r25, r24
     bee:	95 bd       	out	0x25, r25	; 37
     bf0:	08 95       	ret

00000bf2 <timer0GetPrescaler>:
     bf2:	83 b7       	in	r24, 0x33	; 51
     bf4:	e8 2f       	mov	r30, r24
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	e7 70       	andi	r30, 0x07	; 7
     bfa:	f0 70       	andi	r31, 0x00	; 0
     bfc:	ee 0f       	add	r30, r30
     bfe:	ff 1f       	adc	r31, r31
     c00:	ec 55       	subi	r30, 0x5C	; 92
     c02:	ff 4f       	sbci	r31, 0xFF	; 255
     c04:	25 91       	lpm	r18, Z+
     c06:	34 91       	lpm	r19, Z+
     c08:	c9 01       	movw	r24, r18
     c0a:	08 95       	ret

00000c0c <timer1GetPrescaler>:
     c0c:	8e b5       	in	r24, 0x2e	; 46
     c0e:	e8 2f       	mov	r30, r24
     c10:	f0 e0       	ldi	r31, 0x00	; 0
     c12:	e7 70       	andi	r30, 0x07	; 7
     c14:	f0 70       	andi	r31, 0x00	; 0
     c16:	ee 0f       	add	r30, r30
     c18:	ff 1f       	adc	r31, r31
     c1a:	ec 55       	subi	r30, 0x5C	; 92
     c1c:	ff 4f       	sbci	r31, 0xFF	; 255
     c1e:	25 91       	lpm	r18, Z+
     c20:	34 91       	lpm	r19, Z+
     c22:	c9 01       	movw	r24, r18
     c24:	08 95       	ret

00000c26 <timer2GetPrescaler>:
     c26:	85 b5       	in	r24, 0x25	; 37
     c28:	e8 2f       	mov	r30, r24
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	e7 70       	andi	r30, 0x07	; 7
     c2e:	f0 70       	andi	r31, 0x00	; 0
     c30:	ee 0f       	add	r30, r30
     c32:	ff 1f       	adc	r31, r31
     c34:	e0 55       	subi	r30, 0x50	; 80
     c36:	ff 4f       	sbci	r31, 0xFF	; 255
     c38:	25 91       	lpm	r18, Z+
     c3a:	34 91       	lpm	r19, Z+
     c3c:	c9 01       	movw	r24, r18
     c3e:	08 95       	ret

00000c40 <timerAttach>:
     c40:	88 30       	cpi	r24, 0x08	; 8
     c42:	40 f4       	brcc	.+16     	; 0xc54 <timerAttach+0x14>
     c44:	e8 2f       	mov	r30, r24
     c46:	f0 e0       	ldi	r31, 0x00	; 0
     c48:	ee 0f       	add	r30, r30
     c4a:	ff 1f       	adc	r31, r31
     c4c:	ec 51       	subi	r30, 0x1C	; 28
     c4e:	ff 4f       	sbci	r31, 0xFF	; 255
     c50:	71 83       	std	Z+1, r23	; 0x01
     c52:	60 83       	st	Z, r22
     c54:	08 95       	ret

00000c56 <timerDetach>:
     c56:	88 30       	cpi	r24, 0x08	; 8
     c58:	40 f4       	brcc	.+16     	; 0xc6a <timerDetach+0x14>
     c5a:	e8 2f       	mov	r30, r24
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	ee 0f       	add	r30, r30
     c60:	ff 1f       	adc	r31, r31
     c62:	ec 51       	subi	r30, 0x1C	; 28
     c64:	ff 4f       	sbci	r31, 0xFF	; 255
     c66:	11 82       	std	Z+1, r1	; 0x01
     c68:	10 82       	st	Z, r1
     c6a:	08 95       	ret

00000c6c <timerPause>:
     c6c:	ef 92       	push	r14
     c6e:	ff 92       	push	r15
     c70:	0f 93       	push	r16
     c72:	1f 93       	push	r17
     c74:	cf 93       	push	r28
     c76:	df 93       	push	r29
     c78:	ec 01       	movw	r28, r24
     c7a:	12 b7       	in	r17, 0x32	; 50
     c7c:	10 92 0d 01 	sts	0x010D, r1
     c80:	10 92 0e 01 	sts	0x010E, r1
     c84:	10 92 0f 01 	sts	0x010F, r1
     c88:	10 92 10 01 	sts	0x0110, r1
     c8c:	83 b7       	in	r24, 0x33	; 51
     c8e:	e8 2f       	mov	r30, r24
     c90:	f0 e0       	ldi	r31, 0x00	; 0
     c92:	e7 70       	andi	r30, 0x07	; 7
     c94:	f0 70       	andi	r31, 0x00	; 0
     c96:	ee 0f       	add	r30, r30
     c98:	ff 1f       	adc	r31, r31
     c9a:	ec 55       	subi	r30, 0x5C	; 92
     c9c:	ff 4f       	sbci	r31, 0xFF	; 255
     c9e:	25 91       	lpm	r18, Z+
     ca0:	34 91       	lpm	r19, Z+
     ca2:	40 e0       	ldi	r20, 0x00	; 0
     ca4:	50 e0       	ldi	r21, 0x00	; 0
     ca6:	60 e0       	ldi	r22, 0x00	; 0
     ca8:	74 e2       	ldi	r23, 0x24	; 36
     caa:	84 ef       	ldi	r24, 0xF4	; 244
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 3e 09 	call	0x127c	; 0x127c <__divmodsi4>
     cb2:	b9 01       	movw	r22, r18
     cb4:	ca 01       	movw	r24, r20
     cb6:	69 3b       	cpi	r22, 0xB9	; 185
     cb8:	2d e8       	ldi	r18, 0x8D	; 141
     cba:	72 07       	cpc	r23, r18
     cbc:	26 e0       	ldi	r18, 0x06	; 6
     cbe:	82 07       	cpc	r24, r18
     cc0:	20 e0       	ldi	r18, 0x00	; 0
     cc2:	92 07       	cpc	r25, r18
     cc4:	a0 f4       	brcc	.+40     	; 0xcee <timerPause+0x82>
     cc6:	37 e2       	ldi	r19, 0x27	; 39
     cc8:	c1 31       	cpi	r28, 0x11	; 17
     cca:	d3 07       	cpc	r29, r19
     ccc:	80 f4       	brcc	.+32     	; 0xcee <timerPause+0x82>
     cce:	9e 01       	movw	r18, r28
     cd0:	40 e0       	ldi	r20, 0x00	; 0
     cd2:	50 e0       	ldi	r21, 0x00	; 0
     cd4:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__mulsi3>
     cd8:	28 ee       	ldi	r18, 0xE8	; 232
     cda:	33 e0       	ldi	r19, 0x03	; 3
     cdc:	40 e0       	ldi	r20, 0x00	; 0
     cde:	50 e0       	ldi	r21, 0x00	; 0
     ce0:	0e 94 1c 09 	call	0x1238	; 0x1238 <__udivmodsi4>
     ce4:	c9 01       	movw	r24, r18
     ce6:	da 01       	movw	r26, r20
     ce8:	bc 01       	movw	r22, r24
     cea:	cd 01       	movw	r24, r26
     cec:	21 c0       	rjmp	.+66     	; 0xd30 <timerPause+0xc4>
     cee:	28 ee       	ldi	r18, 0xE8	; 232
     cf0:	33 e0       	ldi	r19, 0x03	; 3
     cf2:	40 e0       	ldi	r20, 0x00	; 0
     cf4:	50 e0       	ldi	r21, 0x00	; 0
     cf6:	0e 94 1c 09 	call	0x1238	; 0x1238 <__udivmodsi4>
     cfa:	ca 01       	movw	r24, r20
     cfc:	b9 01       	movw	r22, r18
     cfe:	9e 01       	movw	r18, r28
     d00:	40 e0       	ldi	r20, 0x00	; 0
     d02:	50 e0       	ldi	r21, 0x00	; 0
     d04:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__mulsi3>
     d08:	13 c0       	rjmp	.+38     	; 0xd30 <timerPause+0xc4>
     d0a:	80 91 0d 01 	lds	r24, 0x010D
     d0e:	90 91 0e 01 	lds	r25, 0x010E
     d12:	a0 91 0f 01 	lds	r26, 0x010F
     d16:	b0 91 10 01 	lds	r27, 0x0110
     d1a:	85 b7       	in	r24, 0x35	; 53
     d1c:	8f 74       	andi	r24, 0x4F	; 79
     d1e:	85 bf       	out	0x35, r24	; 53
     d20:	85 b7       	in	r24, 0x35	; 53
     d22:	80 64       	ori	r24, 0x40	; 64
     d24:	85 bf       	out	0x35, r24	; 53
     d26:	88 95       	sleep
     d28:	85 b7       	in	r24, 0x35	; 53
     d2a:	8f 7b       	andi	r24, 0xBF	; 191
     d2c:	85 bf       	out	0x35, r24	; 53
     d2e:	08 c0       	rjmp	.+16     	; 0xd40 <timerPause+0xd4>
     d30:	9b 01       	movw	r18, r22
     d32:	ac 01       	movw	r20, r24
     d34:	21 0f       	add	r18, r17
     d36:	31 1d       	adc	r19, r1
     d38:	41 1d       	adc	r20, r1
     d3a:	51 1d       	adc	r21, r1
     d3c:	79 01       	movw	r14, r18
     d3e:	8a 01       	movw	r16, r20
     d40:	20 91 0d 01 	lds	r18, 0x010D
     d44:	30 91 0e 01 	lds	r19, 0x010E
     d48:	40 91 0f 01 	lds	r20, 0x010F
     d4c:	50 91 10 01 	lds	r21, 0x0110
     d50:	82 b7       	in	r24, 0x32	; 50
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	a0 e0       	ldi	r26, 0x00	; 0
     d56:	b0 e0       	ldi	r27, 0x00	; 0
     d58:	54 2f       	mov	r21, r20
     d5a:	43 2f       	mov	r20, r19
     d5c:	32 2f       	mov	r19, r18
     d5e:	22 27       	eor	r18, r18
     d60:	82 2b       	or	r24, r18
     d62:	93 2b       	or	r25, r19
     d64:	a4 2b       	or	r26, r20
     d66:	b5 2b       	or	r27, r21
     d68:	8e 15       	cp	r24, r14
     d6a:	9f 05       	cpc	r25, r15
     d6c:	a0 07       	cpc	r26, r16
     d6e:	b1 07       	cpc	r27, r17
     d70:	60 f2       	brcs	.-104    	; 0xd0a <timerPause+0x9e>
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	1f 91       	pop	r17
     d78:	0f 91       	pop	r16
     d7a:	ff 90       	pop	r15
     d7c:	ef 90       	pop	r14
     d7e:	08 95       	ret

00000d80 <timer0ClearOverflowCount>:
     d80:	10 92 09 01 	sts	0x0109, r1
     d84:	10 92 0a 01 	sts	0x010A, r1
     d88:	10 92 0b 01 	sts	0x010B, r1
     d8c:	10 92 0c 01 	sts	0x010C, r1
     d90:	08 95       	ret

00000d92 <timer0GetOverflowCount>:
     d92:	20 91 09 01 	lds	r18, 0x0109
     d96:	30 91 0a 01 	lds	r19, 0x010A
     d9a:	40 91 0b 01 	lds	r20, 0x010B
     d9e:	50 91 0c 01 	lds	r21, 0x010C
     da2:	b9 01       	movw	r22, r18
     da4:	ca 01       	movw	r24, r20
     da6:	08 95       	ret

00000da8 <timer2ClearOverflowCount>:
     da8:	10 92 11 01 	sts	0x0111, r1
     dac:	10 92 12 01 	sts	0x0112, r1
     db0:	10 92 13 01 	sts	0x0113, r1
     db4:	10 92 14 01 	sts	0x0114, r1
     db8:	08 95       	ret

00000dba <timer2GetOverflowCount>:
     dba:	20 91 11 01 	lds	r18, 0x0111
     dbe:	30 91 12 01 	lds	r19, 0x0112
     dc2:	40 91 13 01 	lds	r20, 0x0113
     dc6:	50 91 14 01 	lds	r21, 0x0114
     dca:	b9 01       	movw	r22, r18
     dcc:	ca 01       	movw	r24, r20
     dce:	08 95       	ret

00000dd0 <timer1PWMInit>:
     dd0:	89 30       	cpi	r24, 0x09	; 9
     dd2:	31 f4       	brne	.+12     	; 0xde0 <timer1PWMInit+0x10>
     dd4:	8f b5       	in	r24, 0x2f	; 47
     dd6:	82 60       	ori	r24, 0x02	; 2
     dd8:	8f bd       	out	0x2f, r24	; 47
     dda:	8f b5       	in	r24, 0x2f	; 47
     ddc:	8e 7f       	andi	r24, 0xFE	; 254
     dde:	0a c0       	rjmp	.+20     	; 0xdf4 <timer1PWMInit+0x24>
     de0:	8a 30       	cpi	r24, 0x0A	; 10
     de2:	19 f4       	brne	.+6      	; 0xdea <timer1PWMInit+0x1a>
     de4:	8f b5       	in	r24, 0x2f	; 47
     de6:	82 60       	ori	r24, 0x02	; 2
     de8:	02 c0       	rjmp	.+4      	; 0xdee <timer1PWMInit+0x1e>
     dea:	8f b5       	in	r24, 0x2f	; 47
     dec:	8d 7f       	andi	r24, 0xFD	; 253
     dee:	8f bd       	out	0x2f, r24	; 47
     df0:	8f b5       	in	r24, 0x2f	; 47
     df2:	81 60       	ori	r24, 0x01	; 1
     df4:	8f bd       	out	0x2f, r24	; 47
     df6:	1b bc       	out	0x2b, r1	; 43
     df8:	1a bc       	out	0x2a, r1	; 42
     dfa:	19 bc       	out	0x29, r1	; 41
     dfc:	18 bc       	out	0x28, r1	; 40
     dfe:	08 95       	ret

00000e00 <timer1PWMInitICR>:
     e00:	2f b5       	in	r18, 0x2f	; 47
     e02:	2e 7f       	andi	r18, 0xFE	; 254
     e04:	2f bd       	out	0x2f, r18	; 47
     e06:	2f b5       	in	r18, 0x2f	; 47
     e08:	22 60       	ori	r18, 0x02	; 2
     e0a:	2f bd       	out	0x2f, r18	; 47
     e0c:	2e b5       	in	r18, 0x2e	; 46
     e0e:	28 60       	ori	r18, 0x08	; 8
     e10:	2e bd       	out	0x2e, r18	; 46
     e12:	2e b5       	in	r18, 0x2e	; 46
     e14:	20 61       	ori	r18, 0x10	; 16
     e16:	2e bd       	out	0x2e, r18	; 46
     e18:	97 bd       	out	0x27, r25	; 39
     e1a:	86 bd       	out	0x26, r24	; 38
     e1c:	1b bc       	out	0x2b, r1	; 43
     e1e:	1a bc       	out	0x2a, r1	; 42
     e20:	19 bc       	out	0x29, r1	; 41
     e22:	18 bc       	out	0x28, r1	; 40
     e24:	08 95       	ret

00000e26 <timer1PWMOff>:
     e26:	8f b5       	in	r24, 0x2f	; 47
     e28:	8d 7f       	andi	r24, 0xFD	; 253
     e2a:	8f bd       	out	0x2f, r24	; 47
     e2c:	8f b5       	in	r24, 0x2f	; 47
     e2e:	8e 7f       	andi	r24, 0xFE	; 254
     e30:	8f bd       	out	0x2f, r24	; 47
     e32:	8f b5       	in	r24, 0x2f	; 47
     e34:	8f 77       	andi	r24, 0x7F	; 127
     e36:	8f bd       	out	0x2f, r24	; 47
     e38:	8f b5       	in	r24, 0x2f	; 47
     e3a:	8f 7b       	andi	r24, 0xBF	; 191
     e3c:	8f bd       	out	0x2f, r24	; 47
     e3e:	8f b5       	in	r24, 0x2f	; 47
     e40:	8f 7d       	andi	r24, 0xDF	; 223
     e42:	8f bd       	out	0x2f, r24	; 47
     e44:	8f b5       	in	r24, 0x2f	; 47
     e46:	8f 7e       	andi	r24, 0xEF	; 239
     e48:	8f bd       	out	0x2f, r24	; 47
     e4a:	08 95       	ret

00000e4c <timer1PWMAOn>:
     e4c:	8f b5       	in	r24, 0x2f	; 47
     e4e:	80 68       	ori	r24, 0x80	; 128
     e50:	8f bd       	out	0x2f, r24	; 47
     e52:	8f b5       	in	r24, 0x2f	; 47
     e54:	8f 7b       	andi	r24, 0xBF	; 191
     e56:	8f bd       	out	0x2f, r24	; 47
     e58:	08 95       	ret

00000e5a <timer1PWMBOn>:
     e5a:	8f b5       	in	r24, 0x2f	; 47
     e5c:	80 62       	ori	r24, 0x20	; 32
     e5e:	8f bd       	out	0x2f, r24	; 47
     e60:	8f b5       	in	r24, 0x2f	; 47
     e62:	8f 7e       	andi	r24, 0xEF	; 239
     e64:	8f bd       	out	0x2f, r24	; 47
     e66:	08 95       	ret

00000e68 <timer1PWMAOff>:
     e68:	8f b5       	in	r24, 0x2f	; 47
     e6a:	8f 77       	andi	r24, 0x7F	; 127
     e6c:	8f bd       	out	0x2f, r24	; 47
     e6e:	8f b5       	in	r24, 0x2f	; 47
     e70:	8f 7b       	andi	r24, 0xBF	; 191
     e72:	8f bd       	out	0x2f, r24	; 47
     e74:	08 95       	ret

00000e76 <timer1PWMBOff>:
     e76:	8f b5       	in	r24, 0x2f	; 47
     e78:	8f 7d       	andi	r24, 0xDF	; 223
     e7a:	8f bd       	out	0x2f, r24	; 47
     e7c:	8f b5       	in	r24, 0x2f	; 47
     e7e:	8f 7e       	andi	r24, 0xEF	; 239
     e80:	8f bd       	out	0x2f, r24	; 47
     e82:	08 95       	ret

00000e84 <timer1PWMASet>:
     e84:	9b bd       	out	0x2b, r25	; 43
     e86:	8a bd       	out	0x2a, r24	; 42
     e88:	08 95       	ret

00000e8a <timer1PWMBSet>:
     e8a:	99 bd       	out	0x29, r25	; 41
     e8c:	88 bd       	out	0x28, r24	; 40
     e8e:	08 95       	ret

00000e90 <__vector_9>:
     e90:	1f 92       	push	r1
     e92:	0f 92       	push	r0
     e94:	0f b6       	in	r0, 0x3f	; 63
     e96:	0f 92       	push	r0
     e98:	11 24       	eor	r1, r1
     e9a:	2f 93       	push	r18
     e9c:	3f 93       	push	r19
     e9e:	4f 93       	push	r20
     ea0:	5f 93       	push	r21
     ea2:	6f 93       	push	r22
     ea4:	7f 93       	push	r23
     ea6:	8f 93       	push	r24
     ea8:	9f 93       	push	r25
     eaa:	af 93       	push	r26
     eac:	bf 93       	push	r27
     eae:	ef 93       	push	r30
     eb0:	ff 93       	push	r31
     eb2:	80 91 09 01 	lds	r24, 0x0109
     eb6:	90 91 0a 01 	lds	r25, 0x010A
     eba:	a0 91 0b 01 	lds	r26, 0x010B
     ebe:	b0 91 0c 01 	lds	r27, 0x010C
     ec2:	01 96       	adiw	r24, 0x01	; 1
     ec4:	a1 1d       	adc	r26, r1
     ec6:	b1 1d       	adc	r27, r1
     ec8:	80 93 09 01 	sts	0x0109, r24
     ecc:	90 93 0a 01 	sts	0x010A, r25
     ed0:	a0 93 0b 01 	sts	0x010B, r26
     ed4:	b0 93 0c 01 	sts	0x010C, r27
     ed8:	80 91 0d 01 	lds	r24, 0x010D
     edc:	90 91 0e 01 	lds	r25, 0x010E
     ee0:	a0 91 0f 01 	lds	r26, 0x010F
     ee4:	b0 91 10 01 	lds	r27, 0x0110
     ee8:	01 96       	adiw	r24, 0x01	; 1
     eea:	a1 1d       	adc	r26, r1
     eec:	b1 1d       	adc	r27, r1
     eee:	80 93 0d 01 	sts	0x010D, r24
     ef2:	90 93 0e 01 	sts	0x010E, r25
     ef6:	a0 93 0f 01 	sts	0x010F, r26
     efa:	b0 93 10 01 	sts	0x0110, r27
     efe:	80 91 e4 00 	lds	r24, 0x00E4
     f02:	90 91 e5 00 	lds	r25, 0x00E5
     f06:	89 2b       	or	r24, r25
     f08:	29 f0       	breq	.+10     	; 0xf14 <__vector_9+0x84>
     f0a:	e0 91 e4 00 	lds	r30, 0x00E4
     f0e:	f0 91 e5 00 	lds	r31, 0x00E5
     f12:	09 95       	icall
     f14:	ff 91       	pop	r31
     f16:	ef 91       	pop	r30
     f18:	bf 91       	pop	r27
     f1a:	af 91       	pop	r26
     f1c:	9f 91       	pop	r25
     f1e:	8f 91       	pop	r24
     f20:	7f 91       	pop	r23
     f22:	6f 91       	pop	r22
     f24:	5f 91       	pop	r21
     f26:	4f 91       	pop	r20
     f28:	3f 91       	pop	r19
     f2a:	2f 91       	pop	r18
     f2c:	0f 90       	pop	r0
     f2e:	0f be       	out	0x3f, r0	; 63
     f30:	0f 90       	pop	r0
     f32:	1f 90       	pop	r1
     f34:	18 95       	reti

00000f36 <__vector_8>:
     f36:	1f 92       	push	r1
     f38:	0f 92       	push	r0
     f3a:	0f b6       	in	r0, 0x3f	; 63
     f3c:	0f 92       	push	r0
     f3e:	11 24       	eor	r1, r1
     f40:	2f 93       	push	r18
     f42:	3f 93       	push	r19
     f44:	4f 93       	push	r20
     f46:	5f 93       	push	r21
     f48:	6f 93       	push	r22
     f4a:	7f 93       	push	r23
     f4c:	8f 93       	push	r24
     f4e:	9f 93       	push	r25
     f50:	af 93       	push	r26
     f52:	bf 93       	push	r27
     f54:	ef 93       	push	r30
     f56:	ff 93       	push	r31
     f58:	80 91 e6 00 	lds	r24, 0x00E6
     f5c:	90 91 e7 00 	lds	r25, 0x00E7
     f60:	89 2b       	or	r24, r25
     f62:	29 f0       	breq	.+10     	; 0xf6e <__vector_8+0x38>
     f64:	e0 91 e6 00 	lds	r30, 0x00E6
     f68:	f0 91 e7 00 	lds	r31, 0x00E7
     f6c:	09 95       	icall
     f6e:	ff 91       	pop	r31
     f70:	ef 91       	pop	r30
     f72:	bf 91       	pop	r27
     f74:	af 91       	pop	r26
     f76:	9f 91       	pop	r25
     f78:	8f 91       	pop	r24
     f7a:	7f 91       	pop	r23
     f7c:	6f 91       	pop	r22
     f7e:	5f 91       	pop	r21
     f80:	4f 91       	pop	r20
     f82:	3f 91       	pop	r19
     f84:	2f 91       	pop	r18
     f86:	0f 90       	pop	r0
     f88:	0f be       	out	0x3f, r0	; 63
     f8a:	0f 90       	pop	r0
     f8c:	1f 90       	pop	r1
     f8e:	18 95       	reti

00000f90 <__vector_4>:
     f90:	1f 92       	push	r1
     f92:	0f 92       	push	r0
     f94:	0f b6       	in	r0, 0x3f	; 63
     f96:	0f 92       	push	r0
     f98:	11 24       	eor	r1, r1
     f9a:	2f 93       	push	r18
     f9c:	3f 93       	push	r19
     f9e:	4f 93       	push	r20
     fa0:	5f 93       	push	r21
     fa2:	6f 93       	push	r22
     fa4:	7f 93       	push	r23
     fa6:	8f 93       	push	r24
     fa8:	9f 93       	push	r25
     faa:	af 93       	push	r26
     fac:	bf 93       	push	r27
     fae:	ef 93       	push	r30
     fb0:	ff 93       	push	r31
     fb2:	80 91 11 01 	lds	r24, 0x0111
     fb6:	90 91 12 01 	lds	r25, 0x0112
     fba:	a0 91 13 01 	lds	r26, 0x0113
     fbe:	b0 91 14 01 	lds	r27, 0x0114
     fc2:	01 96       	adiw	r24, 0x01	; 1
     fc4:	a1 1d       	adc	r26, r1
     fc6:	b1 1d       	adc	r27, r1
     fc8:	80 93 11 01 	sts	0x0111, r24
     fcc:	90 93 12 01 	sts	0x0112, r25
     fd0:	a0 93 13 01 	sts	0x0113, r26
     fd4:	b0 93 14 01 	sts	0x0114, r27
     fd8:	80 91 ee 00 	lds	r24, 0x00EE
     fdc:	90 91 ef 00 	lds	r25, 0x00EF
     fe0:	89 2b       	or	r24, r25
     fe2:	29 f0       	breq	.+10     	; 0xfee <__vector_4+0x5e>
     fe4:	e0 91 ee 00 	lds	r30, 0x00EE
     fe8:	f0 91 ef 00 	lds	r31, 0x00EF
     fec:	09 95       	icall
     fee:	ff 91       	pop	r31
     ff0:	ef 91       	pop	r30
     ff2:	bf 91       	pop	r27
     ff4:	af 91       	pop	r26
     ff6:	9f 91       	pop	r25
     ff8:	8f 91       	pop	r24
     ffa:	7f 91       	pop	r23
     ffc:	6f 91       	pop	r22
     ffe:	5f 91       	pop	r21
    1000:	4f 91       	pop	r20
    1002:	3f 91       	pop	r19
    1004:	2f 91       	pop	r18
    1006:	0f 90       	pop	r0
    1008:	0f be       	out	0x3f, r0	; 63
    100a:	0f 90       	pop	r0
    100c:	1f 90       	pop	r1
    100e:	18 95       	reti

00001010 <__vector_19>:
    1010:	1f 92       	push	r1
    1012:	0f 92       	push	r0
    1014:	0f b6       	in	r0, 0x3f	; 63
    1016:	0f 92       	push	r0
    1018:	11 24       	eor	r1, r1
    101a:	2f 93       	push	r18
    101c:	3f 93       	push	r19
    101e:	4f 93       	push	r20
    1020:	5f 93       	push	r21
    1022:	6f 93       	push	r22
    1024:	7f 93       	push	r23
    1026:	8f 93       	push	r24
    1028:	9f 93       	push	r25
    102a:	af 93       	push	r26
    102c:	bf 93       	push	r27
    102e:	ef 93       	push	r30
    1030:	ff 93       	push	r31
    1032:	80 91 f2 00 	lds	r24, 0x00F2
    1036:	90 91 f3 00 	lds	r25, 0x00F3
    103a:	89 2b       	or	r24, r25
    103c:	29 f0       	breq	.+10     	; 0x1048 <__vector_19+0x38>
    103e:	e0 91 f2 00 	lds	r30, 0x00F2
    1042:	f0 91 f3 00 	lds	r31, 0x00F3
    1046:	09 95       	icall
    1048:	ff 91       	pop	r31
    104a:	ef 91       	pop	r30
    104c:	bf 91       	pop	r27
    104e:	af 91       	pop	r26
    1050:	9f 91       	pop	r25
    1052:	8f 91       	pop	r24
    1054:	7f 91       	pop	r23
    1056:	6f 91       	pop	r22
    1058:	5f 91       	pop	r21
    105a:	4f 91       	pop	r20
    105c:	3f 91       	pop	r19
    105e:	2f 91       	pop	r18
    1060:	0f 90       	pop	r0
    1062:	0f be       	out	0x3f, r0	; 63
    1064:	0f 90       	pop	r0
    1066:	1f 90       	pop	r1
    1068:	18 95       	reti

0000106a <__vector_6>:
    106a:	1f 92       	push	r1
    106c:	0f 92       	push	r0
    106e:	0f b6       	in	r0, 0x3f	; 63
    1070:	0f 92       	push	r0
    1072:	11 24       	eor	r1, r1
    1074:	2f 93       	push	r18
    1076:	3f 93       	push	r19
    1078:	4f 93       	push	r20
    107a:	5f 93       	push	r21
    107c:	6f 93       	push	r22
    107e:	7f 93       	push	r23
    1080:	8f 93       	push	r24
    1082:	9f 93       	push	r25
    1084:	af 93       	push	r26
    1086:	bf 93       	push	r27
    1088:	ef 93       	push	r30
    108a:	ff 93       	push	r31
    108c:	80 91 e8 00 	lds	r24, 0x00E8
    1090:	90 91 e9 00 	lds	r25, 0x00E9
    1094:	89 2b       	or	r24, r25
    1096:	29 f0       	breq	.+10     	; 0x10a2 <__vector_6+0x38>
    1098:	e0 91 e8 00 	lds	r30, 0x00E8
    109c:	f0 91 e9 00 	lds	r31, 0x00E9
    10a0:	09 95       	icall
    10a2:	ff 91       	pop	r31
    10a4:	ef 91       	pop	r30
    10a6:	bf 91       	pop	r27
    10a8:	af 91       	pop	r26
    10aa:	9f 91       	pop	r25
    10ac:	8f 91       	pop	r24
    10ae:	7f 91       	pop	r23
    10b0:	6f 91       	pop	r22
    10b2:	5f 91       	pop	r21
    10b4:	4f 91       	pop	r20
    10b6:	3f 91       	pop	r19
    10b8:	2f 91       	pop	r18
    10ba:	0f 90       	pop	r0
    10bc:	0f be       	out	0x3f, r0	; 63
    10be:	0f 90       	pop	r0
    10c0:	1f 90       	pop	r1
    10c2:	18 95       	reti

000010c4 <__vector_7>:
    10c4:	1f 92       	push	r1
    10c6:	0f 92       	push	r0
    10c8:	0f b6       	in	r0, 0x3f	; 63
    10ca:	0f 92       	push	r0
    10cc:	11 24       	eor	r1, r1
    10ce:	2f 93       	push	r18
    10d0:	3f 93       	push	r19
    10d2:	4f 93       	push	r20
    10d4:	5f 93       	push	r21
    10d6:	6f 93       	push	r22
    10d8:	7f 93       	push	r23
    10da:	8f 93       	push	r24
    10dc:	9f 93       	push	r25
    10de:	af 93       	push	r26
    10e0:	bf 93       	push	r27
    10e2:	ef 93       	push	r30
    10e4:	ff 93       	push	r31
    10e6:	80 91 ea 00 	lds	r24, 0x00EA
    10ea:	90 91 eb 00 	lds	r25, 0x00EB
    10ee:	89 2b       	or	r24, r25
    10f0:	29 f0       	breq	.+10     	; 0x10fc <__vector_7+0x38>
    10f2:	e0 91 ea 00 	lds	r30, 0x00EA
    10f6:	f0 91 eb 00 	lds	r31, 0x00EB
    10fa:	09 95       	icall
    10fc:	ff 91       	pop	r31
    10fe:	ef 91       	pop	r30
    1100:	bf 91       	pop	r27
    1102:	af 91       	pop	r26
    1104:	9f 91       	pop	r25
    1106:	8f 91       	pop	r24
    1108:	7f 91       	pop	r23
    110a:	6f 91       	pop	r22
    110c:	5f 91       	pop	r21
    110e:	4f 91       	pop	r20
    1110:	3f 91       	pop	r19
    1112:	2f 91       	pop	r18
    1114:	0f 90       	pop	r0
    1116:	0f be       	out	0x3f, r0	; 63
    1118:	0f 90       	pop	r0
    111a:	1f 90       	pop	r1
    111c:	18 95       	reti

0000111e <__vector_5>:
    111e:	1f 92       	push	r1
    1120:	0f 92       	push	r0
    1122:	0f b6       	in	r0, 0x3f	; 63
    1124:	0f 92       	push	r0
    1126:	11 24       	eor	r1, r1
    1128:	2f 93       	push	r18
    112a:	3f 93       	push	r19
    112c:	4f 93       	push	r20
    112e:	5f 93       	push	r21
    1130:	6f 93       	push	r22
    1132:	7f 93       	push	r23
    1134:	8f 93       	push	r24
    1136:	9f 93       	push	r25
    1138:	af 93       	push	r26
    113a:	bf 93       	push	r27
    113c:	ef 93       	push	r30
    113e:	ff 93       	push	r31
    1140:	80 91 ec 00 	lds	r24, 0x00EC
    1144:	90 91 ed 00 	lds	r25, 0x00ED
    1148:	89 2b       	or	r24, r25
    114a:	29 f0       	breq	.+10     	; 0x1156 <__vector_5+0x38>
    114c:	e0 91 ec 00 	lds	r30, 0x00EC
    1150:	f0 91 ed 00 	lds	r31, 0x00ED
    1154:	09 95       	icall
    1156:	ff 91       	pop	r31
    1158:	ef 91       	pop	r30
    115a:	bf 91       	pop	r27
    115c:	af 91       	pop	r26
    115e:	9f 91       	pop	r25
    1160:	8f 91       	pop	r24
    1162:	7f 91       	pop	r23
    1164:	6f 91       	pop	r22
    1166:	5f 91       	pop	r21
    1168:	4f 91       	pop	r20
    116a:	3f 91       	pop	r19
    116c:	2f 91       	pop	r18
    116e:	0f 90       	pop	r0
    1170:	0f be       	out	0x3f, r0	; 63
    1172:	0f 90       	pop	r0
    1174:	1f 90       	pop	r1
    1176:	18 95       	reti

00001178 <__vector_3>:
    1178:	1f 92       	push	r1
    117a:	0f 92       	push	r0
    117c:	0f b6       	in	r0, 0x3f	; 63
    117e:	0f 92       	push	r0
    1180:	11 24       	eor	r1, r1
    1182:	2f 93       	push	r18
    1184:	3f 93       	push	r19
    1186:	4f 93       	push	r20
    1188:	5f 93       	push	r21
    118a:	6f 93       	push	r22
    118c:	7f 93       	push	r23
    118e:	8f 93       	push	r24
    1190:	9f 93       	push	r25
    1192:	af 93       	push	r26
    1194:	bf 93       	push	r27
    1196:	ef 93       	push	r30
    1198:	ff 93       	push	r31
    119a:	80 91 f0 00 	lds	r24, 0x00F0
    119e:	90 91 f1 00 	lds	r25, 0x00F1
    11a2:	89 2b       	or	r24, r25
    11a4:	29 f0       	breq	.+10     	; 0x11b0 <__vector_3+0x38>
    11a6:	e0 91 f0 00 	lds	r30, 0x00F0
    11aa:	f0 91 f1 00 	lds	r31, 0x00F1
    11ae:	09 95       	icall
    11b0:	ff 91       	pop	r31
    11b2:	ef 91       	pop	r30
    11b4:	bf 91       	pop	r27
    11b6:	af 91       	pop	r26
    11b8:	9f 91       	pop	r25
    11ba:	8f 91       	pop	r24
    11bc:	7f 91       	pop	r23
    11be:	6f 91       	pop	r22
    11c0:	5f 91       	pop	r21
    11c2:	4f 91       	pop	r20
    11c4:	3f 91       	pop	r19
    11c6:	2f 91       	pop	r18
    11c8:	0f 90       	pop	r0
    11ca:	0f be       	out	0x3f, r0	; 63
    11cc:	0f 90       	pop	r0
    11ce:	1f 90       	pop	r1
    11d0:	18 95       	reti

000011d2 <__mulsi3>:
    11d2:	62 9f       	mul	r22, r18
    11d4:	d0 01       	movw	r26, r0
    11d6:	73 9f       	mul	r23, r19
    11d8:	f0 01       	movw	r30, r0
    11da:	82 9f       	mul	r24, r18
    11dc:	e0 0d       	add	r30, r0
    11de:	f1 1d       	adc	r31, r1
    11e0:	64 9f       	mul	r22, r20
    11e2:	e0 0d       	add	r30, r0
    11e4:	f1 1d       	adc	r31, r1
    11e6:	92 9f       	mul	r25, r18
    11e8:	f0 0d       	add	r31, r0
    11ea:	83 9f       	mul	r24, r19
    11ec:	f0 0d       	add	r31, r0
    11ee:	74 9f       	mul	r23, r20
    11f0:	f0 0d       	add	r31, r0
    11f2:	65 9f       	mul	r22, r21
    11f4:	f0 0d       	add	r31, r0
    11f6:	99 27       	eor	r25, r25
    11f8:	72 9f       	mul	r23, r18
    11fa:	b0 0d       	add	r27, r0
    11fc:	e1 1d       	adc	r30, r1
    11fe:	f9 1f       	adc	r31, r25
    1200:	63 9f       	mul	r22, r19
    1202:	b0 0d       	add	r27, r0
    1204:	e1 1d       	adc	r30, r1
    1206:	f9 1f       	adc	r31, r25
    1208:	bd 01       	movw	r22, r26
    120a:	cf 01       	movw	r24, r30
    120c:	11 24       	eor	r1, r1
    120e:	08 95       	ret

00001210 <__udivmodhi4>:
    1210:	aa 1b       	sub	r26, r26
    1212:	bb 1b       	sub	r27, r27
    1214:	51 e1       	ldi	r21, 0x11	; 17
    1216:	07 c0       	rjmp	.+14     	; 0x1226 <__udivmodhi4_ep>

00001218 <__udivmodhi4_loop>:
    1218:	aa 1f       	adc	r26, r26
    121a:	bb 1f       	adc	r27, r27
    121c:	a6 17       	cp	r26, r22
    121e:	b7 07       	cpc	r27, r23
    1220:	10 f0       	brcs	.+4      	; 0x1226 <__udivmodhi4_ep>
    1222:	a6 1b       	sub	r26, r22
    1224:	b7 0b       	sbc	r27, r23

00001226 <__udivmodhi4_ep>:
    1226:	88 1f       	adc	r24, r24
    1228:	99 1f       	adc	r25, r25
    122a:	5a 95       	dec	r21
    122c:	a9 f7       	brne	.-22     	; 0x1218 <__udivmodhi4_loop>
    122e:	80 95       	com	r24
    1230:	90 95       	com	r25
    1232:	bc 01       	movw	r22, r24
    1234:	cd 01       	movw	r24, r26
    1236:	08 95       	ret

00001238 <__udivmodsi4>:
    1238:	a1 e2       	ldi	r26, 0x21	; 33
    123a:	1a 2e       	mov	r1, r26
    123c:	aa 1b       	sub	r26, r26
    123e:	bb 1b       	sub	r27, r27
    1240:	fd 01       	movw	r30, r26
    1242:	0d c0       	rjmp	.+26     	; 0x125e <__udivmodsi4_ep>

00001244 <__udivmodsi4_loop>:
    1244:	aa 1f       	adc	r26, r26
    1246:	bb 1f       	adc	r27, r27
    1248:	ee 1f       	adc	r30, r30
    124a:	ff 1f       	adc	r31, r31
    124c:	a2 17       	cp	r26, r18
    124e:	b3 07       	cpc	r27, r19
    1250:	e4 07       	cpc	r30, r20
    1252:	f5 07       	cpc	r31, r21
    1254:	20 f0       	brcs	.+8      	; 0x125e <__udivmodsi4_ep>
    1256:	a2 1b       	sub	r26, r18
    1258:	b3 0b       	sbc	r27, r19
    125a:	e4 0b       	sbc	r30, r20
    125c:	f5 0b       	sbc	r31, r21

0000125e <__udivmodsi4_ep>:
    125e:	66 1f       	adc	r22, r22
    1260:	77 1f       	adc	r23, r23
    1262:	88 1f       	adc	r24, r24
    1264:	99 1f       	adc	r25, r25
    1266:	1a 94       	dec	r1
    1268:	69 f7       	brne	.-38     	; 0x1244 <__udivmodsi4_loop>
    126a:	60 95       	com	r22
    126c:	70 95       	com	r23
    126e:	80 95       	com	r24
    1270:	90 95       	com	r25
    1272:	9b 01       	movw	r18, r22
    1274:	ac 01       	movw	r20, r24
    1276:	bd 01       	movw	r22, r26
    1278:	cf 01       	movw	r24, r30
    127a:	08 95       	ret

0000127c <__divmodsi4>:
    127c:	97 fb       	bst	r25, 7
    127e:	09 2e       	mov	r0, r25
    1280:	05 26       	eor	r0, r21
    1282:	0e d0       	rcall	.+28     	; 0x12a0 <__divmodsi4_neg1>
    1284:	57 fd       	sbrc	r21, 7
    1286:	04 d0       	rcall	.+8      	; 0x1290 <__divmodsi4_neg2>
    1288:	d7 df       	rcall	.-82     	; 0x1238 <__udivmodsi4>
    128a:	0a d0       	rcall	.+20     	; 0x12a0 <__divmodsi4_neg1>
    128c:	00 1c       	adc	r0, r0
    128e:	38 f4       	brcc	.+14     	; 0x129e <__divmodsi4_exit>

00001290 <__divmodsi4_neg2>:
    1290:	50 95       	com	r21
    1292:	40 95       	com	r20
    1294:	30 95       	com	r19
    1296:	21 95       	neg	r18
    1298:	3f 4f       	sbci	r19, 0xFF	; 255
    129a:	4f 4f       	sbci	r20, 0xFF	; 255
    129c:	5f 4f       	sbci	r21, 0xFF	; 255

0000129e <__divmodsi4_exit>:
    129e:	08 95       	ret

000012a0 <__divmodsi4_neg1>:
    12a0:	f6 f7       	brtc	.-4      	; 0x129e <__divmodsi4_exit>
    12a2:	90 95       	com	r25
    12a4:	80 95       	com	r24
    12a6:	70 95       	com	r23
    12a8:	61 95       	neg	r22
    12aa:	7f 4f       	sbci	r23, 0xFF	; 255
    12ac:	8f 4f       	sbci	r24, 0xFF	; 255
    12ae:	9f 4f       	sbci	r25, 0xFF	; 255
    12b0:	08 95       	ret

000012b2 <_exit>:
    12b2:	f8 94       	cli

000012b4 <__stop_program>:
    12b4:	ff cf       	rjmp	.-2      	; 0x12b4 <__stop_program>

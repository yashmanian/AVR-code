
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003ee  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000080  00800060  000003ee  00000462  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000040  00000000  00000000  000004e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000092  00000000  00000000  00000522  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000007a2  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000299  00000000  00000000  00000d56  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000005db  00000000  00000000  00000fef  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000090  00000000  00000000  000015cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000015f  00000000  00000000  0000165c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000039e  00000000  00000000  000017bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000a8  00000000  00000000  00001b59  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ee       	ldi	r30, 0xEE	; 238
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 3e       	cpi	r26, 0xE0	; 224
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include <util/delay.h>

#include "lcd.h"

void main()
{
  82:	0f 93       	push	r16
  84:	1f 93       	push	r17
  86:	cf 93       	push	r28
  88:	df 93       	push	r29
   unsigned char i;

   //Initialize LCD module
   LCDInit(LS_BLINK|LS_ULINE);
  8a:	83 e0       	ldi	r24, 0x03	; 3
  8c:	0e 94 88 01 	call	0x310	; 0x310 <LCDInit>

   //Clear the screen
   LCDClear();
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	60 e0       	ldi	r22, 0x00	; 0
  94:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>

   //Simple string printing
   LCDWriteString("Congrats ");
  98:	80 e6       	ldi	r24, 0x60	; 96
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCDWriteString>

   //A string on line 2
   LCDWriteStringXY(0,1,"Loading ");
  a0:	80 e0       	ldi	r24, 0x00	; 0
  a2:	61 e0       	ldi	r22, 0x01	; 1
  a4:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCDGotoXY>
  a8:	8a e6       	ldi	r24, 0x6A	; 106
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCDWriteString>
  b0:	c0 e0       	ldi	r28, 0x00	; 0
  b2:	d0 e0       	ldi	r29, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  b4:	00 e0       	ldi	r16, 0x00	; 0
  b6:	10 e0       	ldi	r17, 0x00	; 0

   //Print some numbers
   for (i=0;i<99;i+=1)
   {
      LCDWriteIntXY(9,1,i,3);
  b8:	89 e0       	ldi	r24, 0x09	; 9
  ba:	61 e0       	ldi	r22, 0x01	; 1
  bc:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCDGotoXY>
  c0:	ce 01       	movw	r24, r28
  c2:	63 e0       	ldi	r22, 0x03	; 3
  c4:	70 e0       	ldi	r23, 0x00	; 0
  c6:	0e 94 18 01 	call	0x230	; 0x230 <LCDWriteInt>
      LCDWriteStringXY(12,1,"%");
  ca:	8c e0       	ldi	r24, 0x0C	; 12
  cc:	61 e0       	ldi	r22, 0x01	; 1
  ce:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCDGotoXY>
  d2:	83 e7       	ldi	r24, 0x73	; 115
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCDWriteString>
  da:	c8 01       	movw	r24, r16
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <main+0x5a>

   //A string on line 2
   LCDWriteStringXY(0,1,"Loading ");

   //Print some numbers
   for (i=0;i<99;i+=1)
  e0:	c8 01       	movw	r24, r16
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <main+0x60>
  e6:	c8 01       	movw	r24, r16
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x66>
  ec:	c8 01       	movw	r24, r16
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <main+0x6c>
  f2:	21 96       	adiw	r28, 0x01	; 1
  f4:	c3 36       	cpi	r28, 0x63	; 99
  f6:	d1 05       	cpc	r29, r1
  f8:	f9 f6       	brne	.-66     	; 0xb8 <main+0x36>
      _delay_loop_2(0);

   }

   //Clear the screen
   LCDClear();
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	60 e0       	ldi	r22, 0x00	; 0
  fe:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>

   //Some more text

   LCDWriteString("Hello world");
 102:	85 e7       	ldi	r24, 0x75	; 117
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCDWriteString>
   LCDWriteStringXY(0,1,"Yashmaniac");    // <--- Write ur NAME HERE !!!!!!!!!!!
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	61 e0       	ldi	r22, 0x01	; 1
 10e:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCDGotoXY>
 112:	81 e8       	ldi	r24, 0x81	; 129
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCDWriteString>
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	40 e0       	ldi	r20, 0x00	; 0
 11e:	50 e0       	ldi	r21, 0x00	; 0
 120:	ca 01       	movw	r24, r20
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <main+0xa0>

   //Wait
   for(i=0;i<100;i++) _delay_loop_2(0);
 126:	2f 5f       	subi	r18, 0xFF	; 255
 128:	24 36       	cpi	r18, 0x64	; 100
 12a:	d1 f7       	brne	.-12     	; 0x120 <main+0x9e>

   //Some More ......
   LCDClear();
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	60 e0       	ldi	r22, 0x00	; 0
 130:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>
   LCDWriteString("    Planet");
 134:	8c e8       	ldi	r24, 0x8C	; 140
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCDWriteString>
   LCDWriteStringXY(0,1,"  Manian");
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	61 e0       	ldi	r22, 0x01	; 1
 140:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCDGotoXY>
 144:	87 e9       	ldi	r24, 0x97	; 151
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCDWriteString>

 14c:	df 91       	pop	r29
 14e:	cf 91       	pop	r28
 150:	1f 91       	pop	r17
 152:	0f 91       	pop	r16
 154:	08 95       	ret

00000156 <LCDBusyLoop>:
 156:	87 b3       	in	r24, 0x17	; 23
 158:	80 7f       	andi	r24, 0xF0	; 240
 15a:	87 bb       	out	0x17, r24	; 23
 15c:	96 9a       	sbi	0x12, 6	; 18
 15e:	93 98       	cbi	0x12, 3	; 18
 160:	82 e0       	ldi	r24, 0x02	; 2
 162:	8a 95       	dec	r24
 164:	f1 f7       	brne	.-4      	; 0x162 <LCDBusyLoop+0xc>
 166:	22 e0       	ldi	r18, 0x02	; 2
 168:	35 e0       	ldi	r19, 0x05	; 5
 16a:	c4 9a       	sbi	0x18, 4	; 24
 16c:	82 2f       	mov	r24, r18
 16e:	8a 95       	dec	r24
 170:	f1 f7       	brne	.-4      	; 0x16e <LCDBusyLoop+0x18>
 172:	86 b3       	in	r24, 0x16	; 22
 174:	82 95       	swap	r24
 176:	80 7f       	andi	r24, 0xF0	; 240
 178:	92 2f       	mov	r25, r18
 17a:	9a 95       	dec	r25
 17c:	f1 f7       	brne	.-4      	; 0x17a <LCDBusyLoop+0x24>
 17e:	c4 98       	cbi	0x18, 4	; 24
 180:	93 2f       	mov	r25, r19
 182:	9a 95       	dec	r25
 184:	f1 f7       	brne	.-4      	; 0x182 <LCDBusyLoop+0x2c>
 186:	c4 9a       	sbi	0x18, 4	; 24
 188:	92 2f       	mov	r25, r18
 18a:	9a 95       	dec	r25
 18c:	f1 f7       	brne	.-4      	; 0x18a <LCDBusyLoop+0x34>
 18e:	96 b3       	in	r25, 0x16	; 22
 190:	92 2f       	mov	r25, r18
 192:	9a 95       	dec	r25
 194:	f1 f7       	brne	.-4      	; 0x192 <LCDBusyLoop+0x3c>
 196:	c4 98       	cbi	0x18, 4	; 24
 198:	93 2f       	mov	r25, r19
 19a:	9a 95       	dec	r25
 19c:	f1 f7       	brne	.-4      	; 0x19a <LCDBusyLoop+0x44>
 19e:	87 fd       	sbrc	r24, 7
 1a0:	e4 cf       	rjmp	.-56     	; 0x16a <LCDBusyLoop+0x14>
 1a2:	96 98       	cbi	0x12, 6	; 18
 1a4:	87 b3       	in	r24, 0x17	; 23
 1a6:	8f 60       	ori	r24, 0x0F	; 15
 1a8:	87 bb       	out	0x17, r24	; 23
 1aa:	08 95       	ret

000001ac <LCDByte>:
 1ac:	28 2f       	mov	r18, r24
 1ae:	66 23       	and	r22, r22
 1b0:	11 f4       	brne	.+4      	; 0x1b6 <LCDByte+0xa>
 1b2:	93 98       	cbi	0x12, 3	; 18
 1b4:	01 c0       	rjmp	.+2      	; 0x1b8 <LCDByte+0xc>
 1b6:	93 9a       	sbi	0x12, 3	; 18
 1b8:	82 e0       	ldi	r24, 0x02	; 2
 1ba:	8a 95       	dec	r24
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <LCDByte+0xe>
 1be:	c4 9a       	sbi	0x18, 4	; 24
 1c0:	88 b3       	in	r24, 0x18	; 24
 1c2:	92 2f       	mov	r25, r18
 1c4:	92 95       	swap	r25
 1c6:	9f 70       	andi	r25, 0x0F	; 15
 1c8:	80 7f       	andi	r24, 0xF0	; 240
 1ca:	98 2b       	or	r25, r24
 1cc:	98 bb       	out	0x18, r25	; 24
 1ce:	95 e0       	ldi	r25, 0x05	; 5
 1d0:	89 2f       	mov	r24, r25
 1d2:	8a 95       	dec	r24
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCDByte+0x26>
 1d6:	c4 98       	cbi	0x18, 4	; 24
 1d8:	89 2f       	mov	r24, r25
 1da:	8a 95       	dec	r24
 1dc:	f1 f7       	brne	.-4      	; 0x1da <LCDByte+0x2e>
 1de:	c4 9a       	sbi	0x18, 4	; 24
 1e0:	88 b3       	in	r24, 0x18	; 24
 1e2:	2f 70       	andi	r18, 0x0F	; 15
 1e4:	80 7f       	andi	r24, 0xF0	; 240
 1e6:	82 2b       	or	r24, r18
 1e8:	88 bb       	out	0x18, r24	; 24
 1ea:	89 2f       	mov	r24, r25
 1ec:	8a 95       	dec	r24
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <LCDByte+0x40>
 1f0:	c4 98       	cbi	0x18, 4	; 24
 1f2:	9a 95       	dec	r25
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <LCDByte+0x46>
 1f6:	0e 94 ab 00 	call	0x156	; 0x156 <LCDBusyLoop>
 1fa:	08 95       	ret

000001fc <LCDWriteString>:
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	ec 01       	movw	r28, r24
 202:	10 c0       	rjmp	.+32     	; 0x224 <LCDWriteString+0x28>
 204:	85 32       	cpi	r24, 0x25	; 37
 206:	51 f4       	brne	.+20     	; 0x21c <LCDWriteString+0x20>
 208:	21 96       	adiw	r28, 0x01	; 1
 20a:	88 81       	ld	r24, Y
 20c:	80 53       	subi	r24, 0x30	; 48
 20e:	88 30       	cpi	r24, 0x08	; 8
 210:	28 f0       	brcs	.+10     	; 0x21c <LCDWriteString+0x20>
 212:	85 e2       	ldi	r24, 0x25	; 37
 214:	61 e0       	ldi	r22, 0x01	; 1
 216:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>
 21a:	88 81       	ld	r24, Y
 21c:	61 e0       	ldi	r22, 0x01	; 1
 21e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>
 222:	21 96       	adiw	r28, 0x01	; 1
 224:	88 81       	ld	r24, Y
 226:	88 23       	and	r24, r24
 228:	69 f7       	brne	.-38     	; 0x204 <LCDWriteString+0x8>
 22a:	df 91       	pop	r29
 22c:	cf 91       	pop	r28
 22e:	08 95       	ret

00000230 <LCDWriteInt>:
 230:	ef 92       	push	r14
 232:	ff 92       	push	r15
 234:	0f 93       	push	r16
 236:	1f 93       	push	r17
 238:	df 93       	push	r29
 23a:	cf 93       	push	r28
 23c:	00 d0       	rcall	.+0      	; 0x23e <LCDWriteInt+0xe>
 23e:	00 d0       	rcall	.+0      	; 0x240 <LCDWriteInt+0x10>
 240:	0f 92       	push	r0
 242:	cd b7       	in	r28, 0x3d	; 61
 244:	de b7       	in	r29, 0x3e	; 62
 246:	9c 01       	movw	r18, r24
 248:	8b 01       	movw	r16, r22
 24a:	fe 01       	movw	r30, r28
 24c:	31 96       	adiw	r30, 0x01	; 1
 24e:	85 e0       	ldi	r24, 0x05	; 5
 250:	df 01       	movw	r26, r30
 252:	1d 92       	st	X+, r1
 254:	8a 95       	dec	r24
 256:	e9 f7       	brne	.-6      	; 0x252 <LCDWriteInt+0x22>
 258:	fe 01       	movw	r30, r28
 25a:	35 96       	adiw	r30, 0x05	; 5
 25c:	0d c0       	rjmp	.+26     	; 0x278 <LCDWriteInt+0x48>
 25e:	c9 01       	movw	r24, r18
 260:	6a e0       	ldi	r22, 0x0A	; 10
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	0e 94 ce 01 	call	0x39c	; 0x39c <__divmodhi4>
 268:	80 83       	st	Z, r24
 26a:	c9 01       	movw	r24, r18
 26c:	6a e0       	ldi	r22, 0x0A	; 10
 26e:	70 e0       	ldi	r23, 0x00	; 0
 270:	0e 94 ce 01 	call	0x39c	; 0x39c <__divmodhi4>
 274:	9b 01       	movw	r18, r22
 276:	31 97       	sbiw	r30, 0x01	; 1
 278:	21 15       	cp	r18, r1
 27a:	31 05       	cpc	r19, r1
 27c:	81 f7       	brne	.-32     	; 0x25e <LCDWriteInt+0x2e>
 27e:	bf ef       	ldi	r27, 0xFF	; 255
 280:	0f 3f       	cpi	r16, 0xFF	; 255
 282:	1b 07       	cpc	r17, r27
 284:	79 f4       	brne	.+30     	; 0x2a4 <LCDWriteInt+0x74>
 286:	20 e0       	ldi	r18, 0x00	; 0
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	ae 01       	movw	r20, r28
 28c:	4f 5f       	subi	r20, 0xFF	; 255
 28e:	5f 4f       	sbci	r21, 0xFF	; 255
 290:	02 c0       	rjmp	.+4      	; 0x296 <LCDWriteInt+0x66>
 292:	2f 5f       	subi	r18, 0xFF	; 255
 294:	3f 4f       	sbci	r19, 0xFF	; 255
 296:	fa 01       	movw	r30, r20
 298:	e2 0f       	add	r30, r18
 29a:	f3 1f       	adc	r31, r19
 29c:	80 81       	ld	r24, Z
 29e:	88 23       	and	r24, r24
 2a0:	c1 f3       	breq	.-16     	; 0x292 <LCDWriteInt+0x62>
 2a2:	04 c0       	rjmp	.+8      	; 0x2ac <LCDWriteInt+0x7c>
 2a4:	25 e0       	ldi	r18, 0x05	; 5
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	20 1b       	sub	r18, r16
 2aa:	31 0b       	sbc	r19, r17
 2ac:	7e 01       	movw	r14, r28
 2ae:	08 94       	sec
 2b0:	e1 1c       	adc	r14, r1
 2b2:	f1 1c       	adc	r15, r1
 2b4:	e2 0e       	add	r14, r18
 2b6:	f3 1e       	adc	r15, r19
 2b8:	89 01       	movw	r16, r18
 2ba:	09 c0       	rjmp	.+18     	; 0x2ce <LCDWriteInt+0x9e>
 2bc:	f7 01       	movw	r30, r14
 2be:	81 91       	ld	r24, Z+
 2c0:	7f 01       	movw	r14, r30
 2c2:	80 5d       	subi	r24, 0xD0	; 208
 2c4:	61 e0       	ldi	r22, 0x01	; 1
 2c6:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>
 2ca:	0f 5f       	subi	r16, 0xFF	; 255
 2cc:	1f 4f       	sbci	r17, 0xFF	; 255
 2ce:	05 30       	cpi	r16, 0x05	; 5
 2d0:	11 05       	cpc	r17, r1
 2d2:	a4 f3       	brlt	.-24     	; 0x2bc <LCDWriteInt+0x8c>
 2d4:	0f 90       	pop	r0
 2d6:	0f 90       	pop	r0
 2d8:	0f 90       	pop	r0
 2da:	0f 90       	pop	r0
 2dc:	0f 90       	pop	r0
 2de:	cf 91       	pop	r28
 2e0:	df 91       	pop	r29
 2e2:	1f 91       	pop	r17
 2e4:	0f 91       	pop	r16
 2e6:	ff 90       	pop	r15
 2e8:	ef 90       	pop	r14
 2ea:	08 95       	ret

000002ec <LCDGotoXY>:
 2ec:	84 31       	cpi	r24, 0x14	; 20
 2ee:	78 f4       	brcc	.+30     	; 0x30e <LCDGotoXY+0x22>
 2f0:	62 30       	cpi	r22, 0x02	; 2
 2f2:	31 f0       	breq	.+12     	; 0x300 <LCDGotoXY+0x14>
 2f4:	63 30       	cpi	r22, 0x03	; 3
 2f6:	31 f0       	breq	.+12     	; 0x304 <LCDGotoXY+0x18>
 2f8:	61 30       	cpi	r22, 0x01	; 1
 2fa:	29 f4       	brne	.+10     	; 0x306 <LCDGotoXY+0x1a>
 2fc:	80 64       	ori	r24, 0x40	; 64
 2fe:	03 c0       	rjmp	.+6      	; 0x306 <LCDGotoXY+0x1a>
 300:	8c 5e       	subi	r24, 0xEC	; 236
 302:	01 c0       	rjmp	.+2      	; 0x306 <LCDGotoXY+0x1a>
 304:	8c 5a       	subi	r24, 0xAC	; 172
 306:	80 68       	ori	r24, 0x80	; 128
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>
 30e:	08 95       	ret

00000310 <LCDInit>:
 310:	1f 93       	push	r17
 312:	cf 93       	push	r28
 314:	df 93       	push	r29
 316:	18 2f       	mov	r17, r24
 318:	8c e2       	ldi	r24, 0x2C	; 44
 31a:	91 e0       	ldi	r25, 0x01	; 1
 31c:	20 e9       	ldi	r18, 0x90	; 144
 31e:	31 e0       	ldi	r19, 0x01	; 1
 320:	f9 01       	movw	r30, r18
 322:	31 97       	sbiw	r30, 0x01	; 1
 324:	f1 f7       	brne	.-4      	; 0x322 <LCDInit+0x12>
 326:	01 97       	sbiw	r24, 0x01	; 1
 328:	d9 f7       	brne	.-10     	; 0x320 <LCDInit+0x10>
 32a:	87 b3       	in	r24, 0x17	; 23
 32c:	8f 60       	ori	r24, 0x0F	; 15
 32e:	87 bb       	out	0x17, r24	; 23
 330:	bc 9a       	sbi	0x17, 4	; 23
 332:	8b 9a       	sbi	0x11, 3	; 17
 334:	8e 9a       	sbi	0x11, 6	; 17
 336:	88 b3       	in	r24, 0x18	; 24
 338:	80 7f       	andi	r24, 0xF0	; 240
 33a:	88 bb       	out	0x18, r24	; 24
 33c:	c4 98       	cbi	0x18, 4	; 24
 33e:	96 98       	cbi	0x12, 6	; 18
 340:	93 98       	cbi	0x12, 3	; 18
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	8a 95       	dec	r24
 346:	f1 f7       	brne	.-4      	; 0x344 <LCDInit+0x34>
 348:	c4 9a       	sbi	0x18, 4	; 24
 34a:	c1 9a       	sbi	0x18, 1	; 24
 34c:	85 e0       	ldi	r24, 0x05	; 5
 34e:	98 2f       	mov	r25, r24
 350:	9a 95       	dec	r25
 352:	f1 f7       	brne	.-4      	; 0x350 <LCDInit+0x40>
 354:	c4 98       	cbi	0x18, 4	; 24
 356:	8a 95       	dec	r24
 358:	f1 f7       	brne	.-4      	; 0x356 <LCDInit+0x46>
 35a:	0e 94 ab 00 	call	0x156	; 0x156 <LCDBusyLoop>
 35e:	81 2f       	mov	r24, r17
 360:	8c 60       	ori	r24, 0x0C	; 12
 362:	60 e0       	ldi	r22, 0x00	; 0
 364:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>
 368:	88 e2       	ldi	r24, 0x28	; 40
 36a:	60 e0       	ldi	r22, 0x00	; 0
 36c:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>
 370:	80 e4       	ldi	r24, 0x40	; 64
 372:	60 e0       	ldi	r22, 0x00	; 0
 374:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>
 378:	c0 ea       	ldi	r28, 0xA0	; 160
 37a:	d0 e0       	ldi	r29, 0x00	; 0
 37c:	89 91       	ld	r24, Y+
 37e:	61 e0       	ldi	r22, 0x01	; 1
 380:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCDByte>
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	c0 3e       	cpi	r28, 0xE0	; 224
 388:	d8 07       	cpc	r29, r24
 38a:	c1 f7       	brne	.-16     	; 0x37c <LCDInit+0x6c>
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	60 e0       	ldi	r22, 0x00	; 0
 390:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCDGotoXY>
 394:	df 91       	pop	r29
 396:	cf 91       	pop	r28
 398:	1f 91       	pop	r17
 39a:	08 95       	ret

0000039c <__divmodhi4>:
 39c:	97 fb       	bst	r25, 7
 39e:	09 2e       	mov	r0, r25
 3a0:	07 26       	eor	r0, r23
 3a2:	0a d0       	rcall	.+20     	; 0x3b8 <__divmodhi4_neg1>
 3a4:	77 fd       	sbrc	r23, 7
 3a6:	04 d0       	rcall	.+8      	; 0x3b0 <__divmodhi4_neg2>
 3a8:	0c d0       	rcall	.+24     	; 0x3c2 <__udivmodhi4>
 3aa:	06 d0       	rcall	.+12     	; 0x3b8 <__divmodhi4_neg1>
 3ac:	00 20       	and	r0, r0
 3ae:	1a f4       	brpl	.+6      	; 0x3b6 <__divmodhi4_exit>

000003b0 <__divmodhi4_neg2>:
 3b0:	70 95       	com	r23
 3b2:	61 95       	neg	r22
 3b4:	7f 4f       	sbci	r23, 0xFF	; 255

000003b6 <__divmodhi4_exit>:
 3b6:	08 95       	ret

000003b8 <__divmodhi4_neg1>:
 3b8:	f6 f7       	brtc	.-4      	; 0x3b6 <__divmodhi4_exit>
 3ba:	90 95       	com	r25
 3bc:	81 95       	neg	r24
 3be:	9f 4f       	sbci	r25, 0xFF	; 255
 3c0:	08 95       	ret

000003c2 <__udivmodhi4>:
 3c2:	aa 1b       	sub	r26, r26
 3c4:	bb 1b       	sub	r27, r27
 3c6:	51 e1       	ldi	r21, 0x11	; 17
 3c8:	07 c0       	rjmp	.+14     	; 0x3d8 <__udivmodhi4_ep>

000003ca <__udivmodhi4_loop>:
 3ca:	aa 1f       	adc	r26, r26
 3cc:	bb 1f       	adc	r27, r27
 3ce:	a6 17       	cp	r26, r22
 3d0:	b7 07       	cpc	r27, r23
 3d2:	10 f0       	brcs	.+4      	; 0x3d8 <__udivmodhi4_ep>
 3d4:	a6 1b       	sub	r26, r22
 3d6:	b7 0b       	sbc	r27, r23

000003d8 <__udivmodhi4_ep>:
 3d8:	88 1f       	adc	r24, r24
 3da:	99 1f       	adc	r25, r25
 3dc:	5a 95       	dec	r21
 3de:	a9 f7       	brne	.-22     	; 0x3ca <__udivmodhi4_loop>
 3e0:	80 95       	com	r24
 3e2:	90 95       	com	r25
 3e4:	bc 01       	movw	r22, r24
 3e6:	cd 01       	movw	r24, r26
 3e8:	08 95       	ret

000003ea <_exit>:
 3ea:	f8 94       	cli

000003ec <__stop_program>:
 3ec:	ff cf       	rjmp	.-2      	; 0x3ec <__stop_program>
